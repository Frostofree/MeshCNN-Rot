<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="786" onload="init(evt)" viewBox="0 0 1200 786" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:16px }
#title { text-anchor:middle; font-size:21px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 16;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="786" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="32.00">Runtime flamegraph</text><text id="subtitle" x="50.0000%" y="64.00">⟲ See the timeline for ordering and concurrency ⟲</text><text id="details" fill="rgb(0,0,0)" x="10" y="84.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="32.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="32.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="773.00"> </text><svg id="frames" x="10" width="1180" total_samples="646934"><g><title>    for line in f: (77,625 samples, 12.00%)</title><rect x="0.0022%" y="144" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="157.50">    for line..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:208 (fill_from_file) (77,625 samples, 12.00%)</title><rect x="0.0022%" y="166" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="179.50">/media/Data1/..</text></g><g><title>    mesh_data.vs, faces = fill_from_file(mesh_data, file) (77,625 samples, 12.00%)</title><rect x="0.0022%" y="188" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="201.50">    mesh_dat..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:69 (from_scratch) (77,625 samples, 12.00%)</title><rect x="0.0022%" y="210" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="223.50">/media/Data1/..</text></g><g><title>        mesh_data = from_scratch(file, opt) (77,625 samples, 12.00%)</title><rect x="0.0022%" y="232" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="245.50">        mesh..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (77,625 samples, 12.00%)</title><rect x="0.0022%" y="254" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="267.50">/media/Data1/..</text></g><g><title>        fill_mesh(self, file, opt) (77,625 samples, 12.00%)</title><rect x="0.0022%" y="276" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="289.50">        fill..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (77,625 samples, 12.00%)</title><rect x="0.0022%" y="298" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="311.50">/media/Data1/..</text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (77,625 samples, 12.00%)</title><rect x="0.0022%" y="320" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="333.50">        mesh..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (77,625 samples, 12.00%)</title><rect x="0.0022%" y="342" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="355.50">/media/Data1/..</text></g><g><title>            for i, data in enumerate(self): (77,625 samples, 12.00%)</title><rect x="0.0022%" y="364" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="377.50">            ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (77,625 samples, 12.00%)</title><rect x="0.0022%" y="386" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="399.50">/media/Data1/..</text></g><g><title>        self.get_mean_std() (77,625 samples, 12.00%)</title><rect x="0.0022%" y="408" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="421.50">        self..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (77,625 samples, 12.00%)</title><rect x="0.0022%" y="430" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="443.50">/media/Data1/..</text></g><g><title>        dataset = ClassificationData(opt) (77,625 samples, 12.00%)</title><rect x="0.0022%" y="452" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="465.50">        data..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (77,625 samples, 12.00%)</title><rect x="0.0022%" y="474" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="487.50">/media/Data1/..</text></g><g><title>        self.dataset = CreateDataset(opt) (77,625 samples, 12.00%)</title><rect x="0.0022%" y="496" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="509.50">        self..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (77,625 samples, 12.00%)</title><rect x="0.0022%" y="518" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="531.50">/media/Data1/..</text></g><g><title>    dataset = DataLoader(opt) (77,625 samples, 12.00%)</title><rect x="0.0022%" y="540" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="553.50">    dataset ..</text></g><g><title>train.py:17 (&lt;module&gt;) (77,625 samples, 12.00%)</title><rect x="0.0022%" y="562" width="11.9989%" height="21" fill="rgb(255,198,198)" fg:x="14" fg:w="77625"/><text x="0.2522%" y="575.50">train.py:17 (..</text></g><g><title>        st = os.stat(s) (3,144 samples, 0.49%)</title><rect x="12.1847%" y="144" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="157.50"></text></g><g><title>/home/siddharth/miniconda3/envs/new_MCNN/lib/python3.7/genericpath.py:42 (isdir) (3,144 samples, 0.49%)</title><rect x="12.1847%" y="166" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="179.50"></text></g><g><title>    if not os.path.isdir(load_dir): (3,144 samples, 0.49%)</title><rect x="12.1847%" y="188" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:50 (get_mesh_path) (3,144 samples, 0.49%)</title><rect x="12.1847%" y="210" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="223.50"></text></g><g><title>    load_path = get_mesh_path(file, opt.num_aug) (3,144 samples, 0.49%)</title><rect x="12.1847%" y="232" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:10 (fill_mesh) (3,144 samples, 0.49%)</title><rect x="12.1847%" y="254" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (3,144 samples, 0.49%)</title><rect x="12.1847%" y="276" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (3,144 samples, 0.49%)</title><rect x="12.1847%" y="298" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (3,144 samples, 0.49%)</title><rect x="12.1847%" y="320" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (3,144 samples, 0.49%)</title><rect x="12.1847%" y="342" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (3,144 samples, 0.49%)</title><rect x="12.1847%" y="364" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (3,144 samples, 0.49%)</title><rect x="12.1847%" y="386" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="399.50"></text></g><g><title>        self.get_mean_std() (3,144 samples, 0.49%)</title><rect x="12.1847%" y="408" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (3,144 samples, 0.49%)</title><rect x="12.1847%" y="430" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (3,144 samples, 0.49%)</title><rect x="12.1847%" y="452" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (3,144 samples, 0.49%)</title><rect x="12.1847%" y="474" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (3,144 samples, 0.49%)</title><rect x="12.1847%" y="496" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (3,144 samples, 0.49%)</title><rect x="12.1847%" y="518" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (3,144 samples, 0.49%)</title><rect x="12.1847%" y="540" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (3,144 samples, 0.49%)</title><rect x="12.1847%" y="562" width="0.4860%" height="21" fill="rgb(255,239,239)" fg:x="78827" fg:w="3144"/><text x="12.4347%" y="575.50"></text></g><g><title>            for root, _, fnames in sorted(os.walk(d)): (3,550 samples, 0.55%)</title><rect x="12.8763%" y="232" width="0.5487%" height="21" fill="rgb(255,238,238)" fg:x="83301" fg:w="3550"/><text x="13.1263%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:59 (make_dataset_by_class) (3,550 samples, 0.55%)</title><rect x="12.8763%" y="254" width="0.5487%" height="21" fill="rgb(255,238,238)" fg:x="83301" fg:w="3550"/><text x="13.1263%" y="267.50"></text></g><g><title>        self.paths = self.make_dataset_by_class(self.dir, self.class_to_idx, opt.phase,opt.fraction_of_data_per_class) (3,550 samples, 0.55%)</title><rect x="12.8763%" y="276" width="0.5487%" height="21" fill="rgb(255,238,238)" fg:x="83301" fg:w="3550"/><text x="13.1263%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:19 (__init__) (3,550 samples, 0.55%)</title><rect x="12.8763%" y="298" width="0.5487%" height="21" fill="rgb(255,238,238)" fg:x="83301" fg:w="3550"/><text x="13.1263%" y="311.50"></text></g><g><title>        dataset = ClassificationData(opt) (3,550 samples, 0.55%)</title><rect x="12.8763%" y="320" width="0.5487%" height="21" fill="rgb(255,238,238)" fg:x="83301" fg:w="3550"/><text x="13.1263%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (3,550 samples, 0.55%)</title><rect x="12.8763%" y="342" width="0.5487%" height="21" fill="rgb(255,238,238)" fg:x="83301" fg:w="3550"/><text x="13.1263%" y="355.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (3,550 samples, 0.55%)</title><rect x="12.8763%" y="364" width="0.5487%" height="21" fill="rgb(255,238,238)" fg:x="83301" fg:w="3550"/><text x="13.1263%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (3,550 samples, 0.55%)</title><rect x="12.8763%" y="386" width="0.5487%" height="21" fill="rgb(255,238,238)" fg:x="83301" fg:w="3550"/><text x="13.1263%" y="399.50"></text></g><g><title>        dataset = DataLoader(opt) (3,287 samples, 0.51%)</title><rect x="12.9169%" y="408" width="0.5081%" height="21" fill="rgb(255,239,239)" fg:x="83564" fg:w="3287"/><text x="13.1669%" y="421.50"></text></g><g><title>train.py:40 (&lt;module&gt;) (3,287 samples, 0.51%)</title><rect x="12.9169%" y="430" width="0.5081%" height="21" fill="rgb(255,239,239)" fg:x="83564" fg:w="3287"/><text x="13.1669%" y="443.50"></text></g><g><title>                    entry = next(scandir_it) (4,288 samples, 0.66%)</title><rect x="12.8375%" y="144" width="0.6628%" height="21" fill="rgb(255,237,237)" fg:x="83050" fg:w="4288"/><text x="13.0875%" y="157.50"></text></g><g><title>/home/siddharth/miniconda3/envs/new_MCNN/lib/python3.7/os.py:362 (walk) (4,288 samples, 0.66%)</title><rect x="12.8375%" y="166" width="0.6628%" height="21" fill="rgb(255,237,237)" fg:x="83050" fg:w="4288"/><text x="13.0875%" y="179.50"></text></g><g><title>                yield from walk(new_path, topdown, onerror, followlinks) (4,037 samples, 0.62%)</title><rect x="12.8763%" y="188" width="0.6240%" height="21" fill="rgb(255,238,238)" fg:x="83301" fg:w="4037"/><text x="13.1263%" y="201.50"></text></g><g><title>/home/siddharth/miniconda3/envs/new_MCNN/lib/python3.7/os.py:413 (walk) (4,037 samples, 0.62%)</title><rect x="12.8763%" y="210" width="0.6240%" height="21" fill="rgb(255,238,238)" fg:x="83301" fg:w="4037"/><text x="13.1263%" y="223.50"></text></g><g class="waiting-frame"><title>? Other ? (87,512 samples, 13.53%)</title><rect x="0.0000%" y="122" width="13.5272%" height="21" fill="rgb(255,194,194)" fg:x="0" fg:w="87512"/><text x="0.2500%" y="135.50">? Other ?</text></g><g><title>def get_side_points(mesh, edge_id): (2,299 samples, 0.36%)</title><rect x="13.6600%" y="144" width="0.3554%" height="21" fill="rgb(255,241,241)" fg:x="88371" fg:w="2299"/><text x="13.9100%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:513 (get_side_points) (2,299 samples, 0.36%)</title><rect x="13.6600%" y="166" width="0.3554%" height="21" fill="rgb(255,241,241)" fg:x="88371" fg:w="2299"/><text x="13.9100%" y="179.50"></text></g><g><title>        edge_points[edge_id] = get_side_points(mesh, edge_id) (2,299 samples, 0.36%)</title><rect x="13.6600%" y="188" width="0.3554%" height="21" fill="rgb(255,241,241)" fg:x="88371" fg:w="2299"/><text x="13.9100%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:508 (get_edge_points) (2,299 samples, 0.36%)</title><rect x="13.6600%" y="210" width="0.3554%" height="21" fill="rgb(255,241,241)" fg:x="88371" fg:w="2299"/><text x="13.9100%" y="223.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (1,422 samples, 0.22%)</title><rect x="14.2367%" y="144" width="0.2198%" height="21" fill="rgb(255,243,243)" fg:x="92102" fg:w="1422"/><text x="14.4867%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (1,422 samples, 0.22%)</title><rect x="14.2367%" y="166" width="0.2198%" height="21" fill="rgb(255,243,243)" fg:x="92102" fg:w="1422"/><text x="14.4867%" y="179.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (1,422 samples, 0.22%)</title><rect x="14.2367%" y="188" width="0.2198%" height="21" fill="rgb(255,243,243)" fg:x="92102" fg:w="1422"/><text x="14.4867%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (1,422 samples, 0.22%)</title><rect x="14.2367%" y="210" width="0.2198%" height="21" fill="rgb(255,243,243)" fg:x="92102" fg:w="1422"/><text x="14.4867%" y="223.50"></text></g><g><title>        fill_mesh(self, file, opt) (1,422 samples, 0.22%)</title><rect x="14.2367%" y="232" width="0.2198%" height="21" fill="rgb(255,243,243)" fg:x="92102" fg:w="1422"/><text x="14.4867%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (1,422 samples, 0.22%)</title><rect x="14.2367%" y="254" width="0.2198%" height="21" fill="rgb(255,243,243)" fg:x="92102" fg:w="1422"/><text x="14.4867%" y="267.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (1,422 samples, 0.22%)</title><rect x="14.2367%" y="276" width="0.2198%" height="21" fill="rgb(255,243,243)" fg:x="92102" fg:w="1422"/><text x="14.4867%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (1,422 samples, 0.22%)</title><rect x="14.2367%" y="298" width="0.2198%" height="21" fill="rgb(255,243,243)" fg:x="92102" fg:w="1422"/><text x="14.4867%" y="311.50"></text></g><g><title>            for i, data in enumerate(self): (1,422 samples, 0.22%)</title><rect x="14.2367%" y="320" width="0.2198%" height="21" fill="rgb(255,243,243)" fg:x="92102" fg:w="1422"/><text x="14.4867%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (1,422 samples, 0.22%)</title><rect x="14.2367%" y="342" width="0.2198%" height="21" fill="rgb(255,243,243)" fg:x="92102" fg:w="1422"/><text x="14.4867%" y="355.50"></text></g><g><title>        self.get_mean_std() (1,422 samples, 0.22%)</title><rect x="14.2367%" y="364" width="0.2198%" height="21" fill="rgb(255,243,243)" fg:x="92102" fg:w="1422"/><text x="14.4867%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (1,422 samples, 0.22%)</title><rect x="14.2367%" y="386" width="0.2198%" height="21" fill="rgb(255,243,243)" fg:x="92102" fg:w="1422"/><text x="14.4867%" y="399.50"></text></g><g><title>        dataset = ClassificationData(opt) (1,422 samples, 0.22%)</title><rect x="14.2367%" y="408" width="0.2198%" height="21" fill="rgb(255,243,243)" fg:x="92102" fg:w="1422"/><text x="14.4867%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (1,422 samples, 0.22%)</title><rect x="14.2367%" y="430" width="0.2198%" height="21" fill="rgb(255,243,243)" fg:x="92102" fg:w="1422"/><text x="14.4867%" y="443.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (1,422 samples, 0.22%)</title><rect x="14.2367%" y="452" width="0.2198%" height="21" fill="rgb(255,243,243)" fg:x="92102" fg:w="1422"/><text x="14.4867%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (1,422 samples, 0.22%)</title><rect x="14.2367%" y="474" width="0.2198%" height="21" fill="rgb(255,243,243)" fg:x="92102" fg:w="1422"/><text x="14.4867%" y="487.50"></text></g><g><title>    dataset = DataLoader(opt) (1,422 samples, 0.22%)</title><rect x="14.2367%" y="496" width="0.2198%" height="21" fill="rgb(255,243,243)" fg:x="92102" fg:w="1422"/><text x="14.4867%" y="509.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (1,422 samples, 0.22%)</title><rect x="14.2367%" y="518" width="0.2198%" height="21" fill="rgb(255,243,243)" fg:x="92102" fg:w="1422"/><text x="14.4867%" y="531.50"></text></g><g><title>    edge_points = get_edge_points(mesh) (1,397 samples, 0.22%)</title><rect x="14.7720%" y="232" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:457 (extract_features) (1,397 samples, 0.22%)</title><rect x="14.7720%" y="254" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="267.50"></text></g><g><title>    mesh_data.features = extract_features(mesh_data) (1,397 samples, 0.22%)</title><rect x="14.7720%" y="276" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (1,397 samples, 0.22%)</title><rect x="14.7720%" y="298" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="311.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (1,397 samples, 0.22%)</title><rect x="14.7720%" y="320" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (1,397 samples, 0.22%)</title><rect x="14.7720%" y="342" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="355.50"></text></g><g><title>        fill_mesh(self, file, opt) (1,397 samples, 0.22%)</title><rect x="14.7720%" y="364" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (1,397 samples, 0.22%)</title><rect x="14.7720%" y="386" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="399.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (1,397 samples, 0.22%)</title><rect x="14.7720%" y="408" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (1,397 samples, 0.22%)</title><rect x="14.7720%" y="430" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="443.50"></text></g><g><title>            for i, data in enumerate(self): (1,397 samples, 0.22%)</title><rect x="14.7720%" y="452" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (1,397 samples, 0.22%)</title><rect x="14.7720%" y="474" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="487.50"></text></g><g><title>        self.get_mean_std() (1,397 samples, 0.22%)</title><rect x="14.7720%" y="496" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (1,397 samples, 0.22%)</title><rect x="14.7720%" y="518" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="531.50"></text></g><g><title>        dataset = ClassificationData(opt) (1,397 samples, 0.22%)</title><rect x="14.7720%" y="540" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (1,397 samples, 0.22%)</title><rect x="14.7720%" y="562" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="575.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (1,397 samples, 0.22%)</title><rect x="14.7720%" y="584" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="597.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (1,397 samples, 0.22%)</title><rect x="14.7720%" y="606" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="619.50"></text></g><g><title>    dataset = DataLoader(opt) (1,397 samples, 0.22%)</title><rect x="14.7720%" y="628" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="641.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (1,397 samples, 0.22%)</title><rect x="14.7720%" y="650" width="0.2159%" height="21" fill="rgb(255,243,243)" fg:x="95565" fg:w="1397"/><text x="15.0220%" y="663.50"></text></g><g><title>    edge_a = mesh.edges[edge_id] (2,660 samples, 0.41%)</title><rect x="14.7720%" y="144" width="0.4112%" height="21" fill="rgb(255,240,240)" fg:x="95565" fg:w="2660"/><text x="15.0220%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:517 (get_side_points) (2,660 samples, 0.41%)</title><rect x="14.7720%" y="166" width="0.4112%" height="21" fill="rgb(255,240,240)" fg:x="95565" fg:w="2660"/><text x="15.0220%" y="179.50"></text></g><g><title>        edge_points[edge_id] = get_side_points(mesh, edge_id) (2,660 samples, 0.41%)</title><rect x="14.7720%" y="188" width="0.4112%" height="21" fill="rgb(255,240,240)" fg:x="95565" fg:w="2660"/><text x="15.0220%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:508 (get_edge_points) (2,660 samples, 0.41%)</title><rect x="14.7720%" y="210" width="0.4112%" height="21" fill="rgb(255,240,240)" fg:x="95565" fg:w="2660"/><text x="15.0220%" y="223.50"></text></g><g><title>    for face_id, face in enumerate(faces): (2,783 samples, 0.43%)</title><rect x="16.4423%" y="144" width="0.4302%" height="21" fill="rgb(255,240,240)" fg:x="106371" fg:w="2783"/><text x="16.6923%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:272 (build_gemm) (1,527 samples, 0.24%)</title><rect x="16.6365%" y="166" width="0.2360%" height="21" fill="rgb(255,242,242)" fg:x="107627" fg:w="1527"/><text x="16.8865%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (1,527 samples, 0.24%)</title><rect x="16.6365%" y="188" width="0.2360%" height="21" fill="rgb(255,242,242)" fg:x="107627" fg:w="1527"/><text x="16.8865%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (1,527 samples, 0.24%)</title><rect x="16.6365%" y="210" width="0.2360%" height="21" fill="rgb(255,242,242)" fg:x="107627" fg:w="1527"/><text x="16.8865%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (1,527 samples, 0.24%)</title><rect x="16.6365%" y="232" width="0.2360%" height="21" fill="rgb(255,242,242)" fg:x="107627" fg:w="1527"/><text x="16.8865%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (1,527 samples, 0.24%)</title><rect x="16.6365%" y="254" width="0.2360%" height="21" fill="rgb(255,242,242)" fg:x="107627" fg:w="1527"/><text x="16.8865%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (1,527 samples, 0.24%)</title><rect x="16.6365%" y="276" width="0.2360%" height="21" fill="rgb(255,242,242)" fg:x="107627" fg:w="1527"/><text x="16.8865%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (1,527 samples, 0.24%)</title><rect x="16.6365%" y="298" width="0.2360%" height="21" fill="rgb(255,242,242)" fg:x="107627" fg:w="1527"/><text x="16.8865%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (1,527 samples, 0.24%)</title><rect x="16.6365%" y="320" width="0.2360%" height="21" fill="rgb(255,242,242)" fg:x="107627" fg:w="1527"/><text x="16.8865%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (1,527 samples, 0.24%)</title><rect x="16.6365%" y="342" width="0.2360%" height="21" fill="rgb(255,242,242)" fg:x="107627" fg:w="1527"/><text x="16.8865%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (1,527 samples, 0.24%)</title><rect x="16.6365%" y="364" width="0.2360%" height="21" fill="rgb(255,242,242)" fg:x="107627" fg:w="1527"/><text x="16.8865%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (1,527 samples, 0.24%)</title><rect x="16.6365%" y="386" width="0.2360%" height="21" fill="rgb(255,242,242)" fg:x="107627" fg:w="1527"/><text x="16.8865%" y="399.50"></text></g><g><title>        self.get_mean_std() (1,527 samples, 0.24%)</title><rect x="16.6365%" y="408" width="0.2360%" height="21" fill="rgb(255,242,242)" fg:x="107627" fg:w="1527"/><text x="16.8865%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (1,527 samples, 0.24%)</title><rect x="16.6365%" y="430" width="0.2360%" height="21" fill="rgb(255,242,242)" fg:x="107627" fg:w="1527"/><text x="16.8865%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (1,527 samples, 0.24%)</title><rect x="16.6365%" y="452" width="0.2360%" height="21" fill="rgb(255,242,242)" fg:x="107627" fg:w="1527"/><text x="16.8865%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (1,527 samples, 0.24%)</title><rect x="16.6365%" y="474" width="0.2360%" height="21" fill="rgb(255,242,242)" fg:x="107627" fg:w="1527"/><text x="16.8865%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (1,527 samples, 0.24%)</title><rect x="16.6365%" y="496" width="0.2360%" height="21" fill="rgb(255,242,242)" fg:x="107627" fg:w="1527"/><text x="16.8865%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (1,527 samples, 0.24%)</title><rect x="16.6365%" y="518" width="0.2360%" height="21" fill="rgb(255,242,242)" fg:x="107627" fg:w="1527"/><text x="16.8865%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (1,527 samples, 0.24%)</title><rect x="16.6365%" y="540" width="0.2360%" height="21" fill="rgb(255,242,242)" fg:x="107627" fg:w="1527"/><text x="16.8865%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (1,527 samples, 0.24%)</title><rect x="16.6365%" y="562" width="0.2360%" height="21" fill="rgb(255,242,242)" fg:x="107627" fg:w="1527"/><text x="16.8865%" y="575.50"></text></g><g><title>    for line in f: (2,805 samples, 0.43%)</title><rect x="16.8782%" y="144" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:208 (fill_from_file) (2,805 samples, 0.43%)</title><rect x="16.8782%" y="166" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="179.50"></text></g><g><title>    mesh_data.vs, faces = fill_from_file(mesh_data, file) (2,805 samples, 0.43%)</title><rect x="16.8782%" y="188" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:69 (from_scratch) (2,805 samples, 0.43%)</title><rect x="16.8782%" y="210" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (2,805 samples, 0.43%)</title><rect x="16.8782%" y="232" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (2,805 samples, 0.43%)</title><rect x="16.8782%" y="254" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (2,805 samples, 0.43%)</title><rect x="16.8782%" y="276" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (2,805 samples, 0.43%)</title><rect x="16.8782%" y="298" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (2,805 samples, 0.43%)</title><rect x="16.8782%" y="320" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (2,805 samples, 0.43%)</title><rect x="16.8782%" y="342" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (2,805 samples, 0.43%)</title><rect x="16.8782%" y="364" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (2,805 samples, 0.43%)</title><rect x="16.8782%" y="386" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="399.50"></text></g><g><title>        self.get_mean_std() (2,805 samples, 0.43%)</title><rect x="16.8782%" y="408" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (2,805 samples, 0.43%)</title><rect x="16.8782%" y="430" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (2,805 samples, 0.43%)</title><rect x="16.8782%" y="452" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (2,805 samples, 0.43%)</title><rect x="16.8782%" y="474" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (2,805 samples, 0.43%)</title><rect x="16.8782%" y="496" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (2,805 samples, 0.43%)</title><rect x="16.8782%" y="518" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (2,805 samples, 0.43%)</title><rect x="16.8782%" y="540" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (2,805 samples, 0.43%)</title><rect x="16.8782%" y="562" width="0.4336%" height="21" fill="rgb(255,240,240)" fg:x="109191" fg:w="2805"/><text x="17.1282%" y="575.50"></text></g><g><title>    edge_points = get_edge_points(mesh) (21,156 samples, 3.27%)</title><rect x="17.8488%" y="232" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="245.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:457 (extract_features) (21,156 samples, 3.27%)</title><rect x="17.8488%" y="254" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="267.50">/m..</text></g><g><title>    mesh_data.features = extract_features(mesh_data) (21,156 samples, 3.27%)</title><rect x="17.8488%" y="276" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="289.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (21,156 samples, 3.27%)</title><rect x="17.8488%" y="298" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="311.50">/m..</text></g><g><title>        mesh_data = from_scratch(file, opt) (21,156 samples, 3.27%)</title><rect x="17.8488%" y="320" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="333.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (21,156 samples, 3.27%)</title><rect x="17.8488%" y="342" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="355.50">/m..</text></g><g><title>        fill_mesh(self, file, opt) (21,156 samples, 3.27%)</title><rect x="17.8488%" y="364" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="377.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (21,156 samples, 3.27%)</title><rect x="17.8488%" y="386" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="399.50">/m..</text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (21,156 samples, 3.27%)</title><rect x="17.8488%" y="408" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="421.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (21,156 samples, 3.27%)</title><rect x="17.8488%" y="430" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="443.50">/m..</text></g><g><title>            for i, data in enumerate(self): (21,156 samples, 3.27%)</title><rect x="17.8488%" y="452" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="465.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (21,156 samples, 3.27%)</title><rect x="17.8488%" y="474" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="487.50">/m..</text></g><g><title>        self.get_mean_std() (21,156 samples, 3.27%)</title><rect x="17.8488%" y="496" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="509.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (21,156 samples, 3.27%)</title><rect x="17.8488%" y="518" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="531.50">/m..</text></g><g><title>        dataset = ClassificationData(opt) (21,156 samples, 3.27%)</title><rect x="17.8488%" y="540" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="553.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (21,156 samples, 3.27%)</title><rect x="17.8488%" y="562" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="575.50">/m..</text></g><g><title>        self.dataset = CreateDataset(opt) (21,156 samples, 3.27%)</title><rect x="17.8488%" y="584" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="597.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (21,156 samples, 3.27%)</title><rect x="17.8488%" y="606" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="619.50">/m..</text></g><g><title>    dataset = DataLoader(opt) (21,156 samples, 3.27%)</title><rect x="17.8488%" y="628" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="641.50"> ..</text></g><g><title>train.py:17 (&lt;module&gt;) (21,156 samples, 3.27%)</title><rect x="17.8488%" y="650" width="3.2702%" height="21" fill="rgb(255,222,222)" fg:x="115470" fg:w="21156"/><text x="18.0988%" y="663.50">tr..</text></g><g><title>    if edge_a[1] in edge_b: (41,995 samples, 6.49%)</title><rect x="17.8488%" y="144" width="6.4914%" height="21" fill="rgb(255,211,211)" fg:x="115470" fg:w="41995"/><text x="18.0988%" y="157.50">    i..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:534 (get_side_points) (41,995 samples, 6.49%)</title><rect x="17.8488%" y="166" width="6.4914%" height="21" fill="rgb(255,211,211)" fg:x="115470" fg:w="41995"/><text x="18.0988%" y="179.50">/media..</text></g><g><title>        edge_points[edge_id] = get_side_points(mesh, edge_id) (41,995 samples, 6.49%)</title><rect x="17.8488%" y="188" width="6.4914%" height="21" fill="rgb(255,211,211)" fg:x="115470" fg:w="41995"/><text x="18.0988%" y="201.50">     ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:508 (get_edge_points) (41,995 samples, 6.49%)</title><rect x="17.8488%" y="210" width="6.4914%" height="21" fill="rgb(255,211,211)" fg:x="115470" fg:w="41995"/><text x="18.0988%" y="223.50">/media..</text></g><g><title>        edge_points = get_edge_points(mesh) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="232" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="245.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:450 (set_edge_lengths) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="254" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="267.50">/m..</text></g><g><title>    set_edge_lengths(mesh, edge_points) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="276" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="289.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:458 (extract_features) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="298" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="311.50">/m..</text></g><g><title>    mesh_data.features = extract_features(mesh_data) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="320" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="333.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="342" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="355.50">/m..</text></g><g><title>        mesh_data = from_scratch(file, opt) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="364" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="377.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="386" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="399.50">/m..</text></g><g><title>        fill_mesh(self, file, opt) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="408" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="421.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="430" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="443.50">/m..</text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="452" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="465.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="474" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="487.50">/m..</text></g><g><title>            for i, data in enumerate(self): (20,839 samples, 3.22%)</title><rect x="21.1190%" y="496" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="509.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="518" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="531.50">/m..</text></g><g><title>        self.get_mean_std() (20,839 samples, 3.22%)</title><rect x="21.1190%" y="540" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="553.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="562" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="575.50">/m..</text></g><g><title>        dataset = ClassificationData(opt) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="584" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="597.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="606" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="619.50">/m..</text></g><g><title>        self.dataset = CreateDataset(opt) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="628" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="641.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="650" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="663.50">/m..</text></g><g><title>    dataset = DataLoader(opt) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="672" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="685.50"> ..</text></g><g><title>train.py:17 (&lt;module&gt;) (20,839 samples, 3.22%)</title><rect x="21.1190%" y="694" width="3.2212%" height="21" fill="rgb(255,223,223)" fg:x="136626" fg:w="20839"/><text x="21.3690%" y="707.50">tr..</text></g><g><title>    edge_points = get_edge_points(mesh) (34,165 samples, 5.28%)</title><rect x="24.3402%" y="232" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="245.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:457 (extract_features) (34,165 samples, 5.28%)</title><rect x="24.3402%" y="254" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="267.50">/med..</text></g><g><title>    mesh_data.features = extract_features(mesh_data) (34,165 samples, 5.28%)</title><rect x="24.3402%" y="276" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="289.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (34,165 samples, 5.28%)</title><rect x="24.3402%" y="298" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="311.50">/med..</text></g><g><title>        mesh_data = from_scratch(file, opt) (34,165 samples, 5.28%)</title><rect x="24.3402%" y="320" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="333.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (34,165 samples, 5.28%)</title><rect x="24.3402%" y="342" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="355.50">/med..</text></g><g><title>        fill_mesh(self, file, opt) (34,165 samples, 5.28%)</title><rect x="24.3402%" y="364" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="377.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (34,165 samples, 5.28%)</title><rect x="24.3402%" y="386" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="399.50">/med..</text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (34,165 samples, 5.28%)</title><rect x="24.3402%" y="408" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="421.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (34,165 samples, 5.28%)</title><rect x="24.3402%" y="430" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="443.50">/med..</text></g><g><title>            for i, data in enumerate(self): (34,165 samples, 5.28%)</title><rect x="24.3402%" y="452" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="465.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (34,165 samples, 5.28%)</title><rect x="24.3402%" y="474" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="487.50">/med..</text></g><g><title>        self.get_mean_std() (34,165 samples, 5.28%)</title><rect x="24.3402%" y="496" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="509.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (34,165 samples, 5.28%)</title><rect x="24.3402%" y="518" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="531.50">/med..</text></g><g><title>        dataset = ClassificationData(opt) (34,165 samples, 5.28%)</title><rect x="24.3402%" y="540" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="553.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (34,165 samples, 5.28%)</title><rect x="24.3402%" y="562" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="575.50">/med..</text></g><g><title>        self.dataset = CreateDataset(opt) (34,165 samples, 5.28%)</title><rect x="24.3402%" y="584" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="597.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (34,165 samples, 5.28%)</title><rect x="24.3402%" y="606" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="619.50">/med..</text></g><g><title>    dataset = DataLoader(opt) (34,165 samples, 5.28%)</title><rect x="24.3402%" y="628" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="641.50">   ..</text></g><g><title>train.py:17 (&lt;module&gt;) (34,165 samples, 5.28%)</title><rect x="24.3402%" y="650" width="5.2811%" height="21" fill="rgb(255,215,215)" fg:x="157465" fg:w="34165"/><text x="24.5902%" y="663.50">trai..</text></g><g><title>    if edge_b[1] in edge_c: (67,659 samples, 10.46%)</title><rect x="24.3402%" y="144" width="10.4584%" height="21" fill="rgb(255,201,201)" fg:x="157465" fg:w="67659"/><text x="24.5902%" y="157.50">    if edg..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:536 (get_side_points) (67,659 samples, 10.46%)</title><rect x="24.3402%" y="166" width="10.4584%" height="21" fill="rgb(255,201,201)" fg:x="157465" fg:w="67659"/><text x="24.5902%" y="179.50">/media/Data..</text></g><g><title>        edge_points[edge_id] = get_side_points(mesh, edge_id) (67,659 samples, 10.46%)</title><rect x="24.3402%" y="188" width="10.4584%" height="21" fill="rgb(255,201,201)" fg:x="157465" fg:w="67659"/><text x="24.5902%" y="201.50">        ed..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:508 (get_edge_points) (67,659 samples, 10.46%)</title><rect x="24.3402%" y="210" width="10.4584%" height="21" fill="rgb(255,201,201)" fg:x="157465" fg:w="67659"/><text x="24.5902%" y="223.50">/media/Data..</text></g><g><title>        edge_points = get_edge_points(mesh) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="232" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="245.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:450 (set_edge_lengths) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="254" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="267.50">/med..</text></g><g><title>    set_edge_lengths(mesh, edge_points) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="276" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="289.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:458 (extract_features) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="298" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="311.50">/med..</text></g><g><title>    mesh_data.features = extract_features(mesh_data) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="320" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="333.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="342" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="355.50">/med..</text></g><g><title>        mesh_data = from_scratch(file, opt) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="364" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="377.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="386" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="399.50">/med..</text></g><g><title>        fill_mesh(self, file, opt) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="408" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="421.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="430" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="443.50">/med..</text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="452" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="465.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="474" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="487.50">/med..</text></g><g><title>            for i, data in enumerate(self): (33,494 samples, 5.18%)</title><rect x="29.6213%" y="496" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="509.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="518" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="531.50">/med..</text></g><g><title>        self.get_mean_std() (33,494 samples, 5.18%)</title><rect x="29.6213%" y="540" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="553.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="562" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="575.50">/med..</text></g><g><title>        dataset = ClassificationData(opt) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="584" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="597.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="606" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="619.50">/med..</text></g><g><title>        self.dataset = CreateDataset(opt) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="628" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="641.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="650" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="663.50">/med..</text></g><g><title>    dataset = DataLoader(opt) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="672" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="685.50">   ..</text></g><g><title>train.py:17 (&lt;module&gt;) (33,494 samples, 5.18%)</title><rect x="29.6213%" y="694" width="5.1773%" height="21" fill="rgb(255,215,215)" fg:x="191630" fg:w="33494"/><text x="29.8713%" y="707.50">trai..</text></g><g><title>    edge_points = get_edge_points(mesh) (35,868 samples, 5.54%)</title><rect x="34.7986%" y="232" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="245.50">    ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:457 (extract_features) (35,868 samples, 5.54%)</title><rect x="34.7986%" y="254" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="267.50">/medi..</text></g><g><title>    mesh_data.features = extract_features(mesh_data) (35,868 samples, 5.54%)</title><rect x="34.7986%" y="276" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="289.50">    ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (35,868 samples, 5.54%)</title><rect x="34.7986%" y="298" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="311.50">/medi..</text></g><g><title>        mesh_data = from_scratch(file, opt) (35,868 samples, 5.54%)</title><rect x="34.7986%" y="320" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="333.50">    ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (35,868 samples, 5.54%)</title><rect x="34.7986%" y="342" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="355.50">/medi..</text></g><g><title>        fill_mesh(self, file, opt) (35,868 samples, 5.54%)</title><rect x="34.7986%" y="364" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="377.50">    ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (35,868 samples, 5.54%)</title><rect x="34.7986%" y="386" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="399.50">/medi..</text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (35,868 samples, 5.54%)</title><rect x="34.7986%" y="408" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="421.50">    ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (35,868 samples, 5.54%)</title><rect x="34.7986%" y="430" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="443.50">/medi..</text></g><g><title>            for i, data in enumerate(self): (35,868 samples, 5.54%)</title><rect x="34.7986%" y="452" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="465.50">    ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (35,868 samples, 5.54%)</title><rect x="34.7986%" y="474" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="487.50">/medi..</text></g><g><title>        self.get_mean_std() (35,868 samples, 5.54%)</title><rect x="34.7986%" y="496" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="509.50">    ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (35,868 samples, 5.54%)</title><rect x="34.7986%" y="518" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="531.50">/medi..</text></g><g><title>        dataset = ClassificationData(opt) (35,868 samples, 5.54%)</title><rect x="34.7986%" y="540" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="553.50">    ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (35,868 samples, 5.54%)</title><rect x="34.7986%" y="562" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="575.50">/medi..</text></g><g><title>        self.dataset = CreateDataset(opt) (35,868 samples, 5.54%)</title><rect x="34.7986%" y="584" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="597.50">    ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (35,868 samples, 5.54%)</title><rect x="34.7986%" y="606" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="619.50">/medi..</text></g><g><title>    dataset = DataLoader(opt) (35,868 samples, 5.54%)</title><rect x="34.7986%" y="628" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="641.50">    ..</text></g><g><title>train.py:17 (&lt;module&gt;) (35,868 samples, 5.54%)</title><rect x="34.7986%" y="650" width="5.5443%" height="21" fill="rgb(255,214,214)" fg:x="225124" fg:w="35868"/><text x="35.0486%" y="663.50">train..</text></g><g><title>    if edge_d[1] in edge_e: (71,954 samples, 11.12%)</title><rect x="34.7986%" y="144" width="11.1223%" height="21" fill="rgb(255,199,199)" fg:x="225124" fg:w="71954"/><text x="35.0486%" y="157.50">    if edge..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:538 (get_side_points) (71,954 samples, 11.12%)</title><rect x="34.7986%" y="166" width="11.1223%" height="21" fill="rgb(255,199,199)" fg:x="225124" fg:w="71954"/><text x="35.0486%" y="179.50">/media/Data1..</text></g><g><title>        edge_points[edge_id] = get_side_points(mesh, edge_id) (71,954 samples, 11.12%)</title><rect x="34.7986%" y="188" width="11.1223%" height="21" fill="rgb(255,199,199)" fg:x="225124" fg:w="71954"/><text x="35.0486%" y="201.50">        edg..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:508 (get_edge_points) (71,954 samples, 11.12%)</title><rect x="34.7986%" y="210" width="11.1223%" height="21" fill="rgb(255,199,199)" fg:x="225124" fg:w="71954"/><text x="35.0486%" y="223.50">/media/Data1..</text></g><g><title>        edge_points = get_edge_points(mesh) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="232" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="245.50">    ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:450 (set_edge_lengths) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="254" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="267.50">/medi..</text></g><g><title>    set_edge_lengths(mesh, edge_points) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="276" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="289.50">    ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:458 (extract_features) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="298" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="311.50">/medi..</text></g><g><title>    mesh_data.features = extract_features(mesh_data) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="320" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="333.50">    ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="342" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="355.50">/medi..</text></g><g><title>        mesh_data = from_scratch(file, opt) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="364" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="377.50">    ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="386" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="399.50">/medi..</text></g><g><title>        fill_mesh(self, file, opt) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="408" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="421.50">    ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="430" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="443.50">/medi..</text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="452" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="465.50">    ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="474" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="487.50">/medi..</text></g><g><title>            for i, data in enumerate(self): (36,086 samples, 5.58%)</title><rect x="40.3429%" y="496" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="509.50">    ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="518" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="531.50">/medi..</text></g><g><title>        self.get_mean_std() (36,086 samples, 5.58%)</title><rect x="40.3429%" y="540" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="553.50">    ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="562" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="575.50">/medi..</text></g><g><title>        dataset = ClassificationData(opt) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="584" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="597.50">    ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="606" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="619.50">/medi..</text></g><g><title>        self.dataset = CreateDataset(opt) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="628" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="641.50">    ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="650" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="663.50">/medi..</text></g><g><title>    dataset = DataLoader(opt) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="672" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="685.50">    ..</text></g><g><title>train.py:17 (&lt;module&gt;) (36,086 samples, 5.58%)</title><rect x="40.3429%" y="694" width="5.5780%" height="21" fill="rgb(255,214,214)" fg:x="260992" fg:w="36086"/><text x="40.5929%" y="707.50">train..</text></g><g><title>    edge_points = get_edge_points(mesh) (4,909 samples, 0.76%)</title><rect x="46.0031%" y="232" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:457 (extract_features) (4,909 samples, 0.76%)</title><rect x="46.0031%" y="254" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="267.50"></text></g><g><title>    mesh_data.features = extract_features(mesh_data) (4,909 samples, 0.76%)</title><rect x="46.0031%" y="276" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (4,909 samples, 0.76%)</title><rect x="46.0031%" y="298" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="311.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (4,909 samples, 0.76%)</title><rect x="46.0031%" y="320" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (4,909 samples, 0.76%)</title><rect x="46.0031%" y="342" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="355.50"></text></g><g><title>        fill_mesh(self, file, opt) (4,909 samples, 0.76%)</title><rect x="46.0031%" y="364" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (4,909 samples, 0.76%)</title><rect x="46.0031%" y="386" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="399.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (4,909 samples, 0.76%)</title><rect x="46.0031%" y="408" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (4,909 samples, 0.76%)</title><rect x="46.0031%" y="430" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="443.50"></text></g><g><title>            for i, data in enumerate(self): (4,909 samples, 0.76%)</title><rect x="46.0031%" y="452" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (4,909 samples, 0.76%)</title><rect x="46.0031%" y="474" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="487.50"></text></g><g><title>        self.get_mean_std() (4,909 samples, 0.76%)</title><rect x="46.0031%" y="496" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (4,909 samples, 0.76%)</title><rect x="46.0031%" y="518" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="531.50"></text></g><g><title>        dataset = ClassificationData(opt) (4,909 samples, 0.76%)</title><rect x="46.0031%" y="540" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (4,909 samples, 0.76%)</title><rect x="46.0031%" y="562" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="575.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (4,909 samples, 0.76%)</title><rect x="46.0031%" y="584" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="597.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (4,909 samples, 0.76%)</title><rect x="46.0031%" y="606" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="619.50"></text></g><g><title>    dataset = DataLoader(opt) (4,909 samples, 0.76%)</title><rect x="46.0031%" y="628" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="641.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (4,909 samples, 0.76%)</title><rect x="46.0031%" y="650" width="0.7588%" height="21" fill="rgb(255,236,236)" fg:x="297610" fg:w="4909"/><text x="46.2531%" y="663.50"></text></g><g><title>    if mesh.gemm_edges[edge_id, 0] == -1: (9,873 samples, 1.53%)</title><rect x="46.0031%" y="144" width="1.5261%" height="21" fill="rgb(255,231,231)" fg:x="297610" fg:w="9873"/><text x="46.2531%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:519 (get_side_points) (9,873 samples, 1.53%)</title><rect x="46.0031%" y="166" width="1.5261%" height="21" fill="rgb(255,231,231)" fg:x="297610" fg:w="9873"/><text x="46.2531%" y="179.50"></text></g><g><title>        edge_points[edge_id] = get_side_points(mesh, edge_id) (9,873 samples, 1.53%)</title><rect x="46.0031%" y="188" width="1.5261%" height="21" fill="rgb(255,231,231)" fg:x="297610" fg:w="9873"/><text x="46.2531%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:508 (get_edge_points) (9,873 samples, 1.53%)</title><rect x="46.0031%" y="210" width="1.5261%" height="21" fill="rgb(255,231,231)" fg:x="297610" fg:w="9873"/><text x="46.2531%" y="223.50"></text></g><g><title>        edge_points = get_edge_points(mesh) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="232" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:450 (set_edge_lengths) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="254" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="267.50"></text></g><g><title>    set_edge_lengths(mesh, edge_points) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="276" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:458 (extract_features) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="298" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="311.50"></text></g><g><title>    mesh_data.features = extract_features(mesh_data) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="320" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="342" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="355.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="364" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="386" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="399.50"></text></g><g><title>        fill_mesh(self, file, opt) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="408" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="430" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="443.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="452" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="474" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="487.50"></text></g><g><title>            for i, data in enumerate(self): (4,964 samples, 0.77%)</title><rect x="46.7620%" y="496" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="518" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="531.50"></text></g><g><title>        self.get_mean_std() (4,964 samples, 0.77%)</title><rect x="46.7620%" y="540" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="562" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="575.50"></text></g><g><title>        dataset = ClassificationData(opt) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="584" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="597.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="606" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="619.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="628" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="641.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="650" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="663.50"></text></g><g><title>    dataset = DataLoader(opt) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="672" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="685.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (4,964 samples, 0.77%)</title><rect x="46.7620%" y="694" width="0.7673%" height="21" fill="rgb(255,236,236)" fg:x="302519" fg:w="4964"/><text x="47.0120%" y="707.50"></text></g><g><title>    edge_points = get_edge_points(mesh) (3,386 samples, 0.52%)</title><rect x="47.5293%" y="232" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:457 (extract_features) (3,386 samples, 0.52%)</title><rect x="47.5293%" y="254" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="267.50"></text></g><g><title>    mesh_data.features = extract_features(mesh_data) (3,386 samples, 0.52%)</title><rect x="47.5293%" y="276" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (3,386 samples, 0.52%)</title><rect x="47.5293%" y="298" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="311.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (3,386 samples, 0.52%)</title><rect x="47.5293%" y="320" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (3,386 samples, 0.52%)</title><rect x="47.5293%" y="342" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="355.50"></text></g><g><title>        fill_mesh(self, file, opt) (3,386 samples, 0.52%)</title><rect x="47.5293%" y="364" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (3,386 samples, 0.52%)</title><rect x="47.5293%" y="386" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="399.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (3,386 samples, 0.52%)</title><rect x="47.5293%" y="408" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (3,386 samples, 0.52%)</title><rect x="47.5293%" y="430" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="443.50"></text></g><g><title>            for i, data in enumerate(self): (3,386 samples, 0.52%)</title><rect x="47.5293%" y="452" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (3,386 samples, 0.52%)</title><rect x="47.5293%" y="474" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="487.50"></text></g><g><title>        self.get_mean_std() (3,386 samples, 0.52%)</title><rect x="47.5293%" y="496" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (3,386 samples, 0.52%)</title><rect x="47.5293%" y="518" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="531.50"></text></g><g><title>        dataset = ClassificationData(opt) (3,386 samples, 0.52%)</title><rect x="47.5293%" y="540" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (3,386 samples, 0.52%)</title><rect x="47.5293%" y="562" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="575.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (3,386 samples, 0.52%)</title><rect x="47.5293%" y="584" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="597.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (3,386 samples, 0.52%)</title><rect x="47.5293%" y="606" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="619.50"></text></g><g><title>    dataset = DataLoader(opt) (3,386 samples, 0.52%)</title><rect x="47.5293%" y="628" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="641.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (3,386 samples, 0.52%)</title><rect x="47.5293%" y="650" width="0.5234%" height="21" fill="rgb(255,239,239)" fg:x="307483" fg:w="3386"/><text x="47.7793%" y="663.50"></text></g><g><title>    if mesh.gemm_edges[edge_id, 2] == -1: (6,726 samples, 1.04%)</title><rect x="47.5293%" y="144" width="1.0397%" height="21" fill="rgb(255,234,234)" fg:x="307483" fg:w="6726"/><text x="47.7793%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:525 (get_side_points) (6,726 samples, 1.04%)</title><rect x="47.5293%" y="166" width="1.0397%" height="21" fill="rgb(255,234,234)" fg:x="307483" fg:w="6726"/><text x="47.7793%" y="179.50"></text></g><g><title>        edge_points[edge_id] = get_side_points(mesh, edge_id) (6,726 samples, 1.04%)</title><rect x="47.5293%" y="188" width="1.0397%" height="21" fill="rgb(255,234,234)" fg:x="307483" fg:w="6726"/><text x="47.7793%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:508 (get_edge_points) (6,726 samples, 1.04%)</title><rect x="47.5293%" y="210" width="1.0397%" height="21" fill="rgb(255,234,234)" fg:x="307483" fg:w="6726"/><text x="47.7793%" y="223.50"></text></g><g><title>        edge_points = get_edge_points(mesh) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="232" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:450 (set_edge_lengths) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="254" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="267.50"></text></g><g><title>    set_edge_lengths(mesh, edge_points) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="276" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:458 (extract_features) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="298" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="311.50"></text></g><g><title>    mesh_data.features = extract_features(mesh_data) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="320" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="342" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="355.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="364" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="386" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="399.50"></text></g><g><title>        fill_mesh(self, file, opt) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="408" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="430" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="443.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="452" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="474" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="487.50"></text></g><g><title>            for i, data in enumerate(self): (3,340 samples, 0.52%)</title><rect x="48.0527%" y="496" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="518" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="531.50"></text></g><g><title>        self.get_mean_std() (3,340 samples, 0.52%)</title><rect x="48.0527%" y="540" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="562" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="575.50"></text></g><g><title>        dataset = ClassificationData(opt) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="584" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="597.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="606" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="619.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="628" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="641.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="650" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="663.50"></text></g><g><title>    dataset = DataLoader(opt) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="672" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="685.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (3,340 samples, 0.52%)</title><rect x="48.0527%" y="694" width="0.5163%" height="21" fill="rgb(255,239,239)" fg:x="310869" fg:w="3340"/><text x="48.3027%" y="707.50"></text></g><g><title>    mesh.edge_areas = np.array(mesh.edge_areas, dtype=np.float32) / np.sum(face_areas) #todo whats the difference between edge_areas and edge_lenghts? (1,404 samples, 0.22%)</title><rect x="48.6629%" y="144" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:306 (build_gemm) (1,404 samples, 0.22%)</title><rect x="48.6629%" y="166" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (1,404 samples, 0.22%)</title><rect x="48.6629%" y="188" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (1,404 samples, 0.22%)</title><rect x="48.6629%" y="210" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (1,404 samples, 0.22%)</title><rect x="48.6629%" y="232" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (1,404 samples, 0.22%)</title><rect x="48.6629%" y="254" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (1,404 samples, 0.22%)</title><rect x="48.6629%" y="276" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (1,404 samples, 0.22%)</title><rect x="48.6629%" y="298" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (1,404 samples, 0.22%)</title><rect x="48.6629%" y="320" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (1,404 samples, 0.22%)</title><rect x="48.6629%" y="342" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (1,404 samples, 0.22%)</title><rect x="48.6629%" y="364" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (1,404 samples, 0.22%)</title><rect x="48.6629%" y="386" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="399.50"></text></g><g><title>        self.get_mean_std() (1,404 samples, 0.22%)</title><rect x="48.6629%" y="408" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (1,404 samples, 0.22%)</title><rect x="48.6629%" y="430" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (1,404 samples, 0.22%)</title><rect x="48.6629%" y="452" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (1,404 samples, 0.22%)</title><rect x="48.6629%" y="474" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (1,404 samples, 0.22%)</title><rect x="48.6629%" y="496" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (1,404 samples, 0.22%)</title><rect x="48.6629%" y="518" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (1,404 samples, 0.22%)</title><rect x="48.6629%" y="540" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (1,404 samples, 0.22%)</title><rect x="48.6629%" y="562" width="0.2170%" height="21" fill="rgb(255,243,243)" fg:x="314817" fg:w="1404"/><text x="48.9129%" y="575.50"></text></g><g><title>    mesh.edges = np.array(edges, dtype=np.int32) (3,722 samples, 0.58%)</title><rect x="48.8844%" y="144" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:302 (build_gemm) (3,722 samples, 0.58%)</title><rect x="48.8844%" y="166" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (3,722 samples, 0.58%)</title><rect x="48.8844%" y="188" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (3,722 samples, 0.58%)</title><rect x="48.8844%" y="210" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (3,722 samples, 0.58%)</title><rect x="48.8844%" y="232" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (3,722 samples, 0.58%)</title><rect x="48.8844%" y="254" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (3,722 samples, 0.58%)</title><rect x="48.8844%" y="276" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (3,722 samples, 0.58%)</title><rect x="48.8844%" y="298" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (3,722 samples, 0.58%)</title><rect x="48.8844%" y="320" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (3,722 samples, 0.58%)</title><rect x="48.8844%" y="342" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (3,722 samples, 0.58%)</title><rect x="48.8844%" y="364" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (3,722 samples, 0.58%)</title><rect x="48.8844%" y="386" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="399.50"></text></g><g><title>        self.get_mean_std() (3,722 samples, 0.58%)</title><rect x="48.8844%" y="408" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (3,722 samples, 0.58%)</title><rect x="48.8844%" y="430" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (3,722 samples, 0.58%)</title><rect x="48.8844%" y="452" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (3,722 samples, 0.58%)</title><rect x="48.8844%" y="474" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (3,722 samples, 0.58%)</title><rect x="48.8844%" y="496" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (3,722 samples, 0.58%)</title><rect x="48.8844%" y="518" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (3,722 samples, 0.58%)</title><rect x="48.8844%" y="540" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (3,722 samples, 0.58%)</title><rect x="48.8844%" y="562" width="0.5753%" height="21" fill="rgb(255,238,238)" fg:x="316250" fg:w="3722"/><text x="49.1344%" y="575.50"></text></g><g><title>    mesh.gemm_edges = np.array(edge_nb, dtype=np.int64) (4,851 samples, 0.75%)</title><rect x="49.7242%" y="144" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:303 (build_gemm) (4,851 samples, 0.75%)</title><rect x="49.7242%" y="166" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (4,851 samples, 0.75%)</title><rect x="49.7242%" y="188" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (4,851 samples, 0.75%)</title><rect x="49.7242%" y="210" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (4,851 samples, 0.75%)</title><rect x="49.7242%" y="232" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (4,851 samples, 0.75%)</title><rect x="49.7242%" y="254" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (4,851 samples, 0.75%)</title><rect x="49.7242%" y="276" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (4,851 samples, 0.75%)</title><rect x="49.7242%" y="298" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (4,851 samples, 0.75%)</title><rect x="49.7242%" y="320" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (4,851 samples, 0.75%)</title><rect x="49.7242%" y="342" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (4,851 samples, 0.75%)</title><rect x="49.7242%" y="364" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (4,851 samples, 0.75%)</title><rect x="49.7242%" y="386" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="399.50"></text></g><g><title>        self.get_mean_std() (4,851 samples, 0.75%)</title><rect x="49.7242%" y="408" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (4,851 samples, 0.75%)</title><rect x="49.7242%" y="430" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (4,851 samples, 0.75%)</title><rect x="49.7242%" y="452" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (4,851 samples, 0.75%)</title><rect x="49.7242%" y="474" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (4,851 samples, 0.75%)</title><rect x="49.7242%" y="496" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (4,851 samples, 0.75%)</title><rect x="49.7242%" y="518" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (4,851 samples, 0.75%)</title><rect x="49.7242%" y="540" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (4,851 samples, 0.75%)</title><rect x="49.7242%" y="562" width="0.7498%" height="21" fill="rgb(255,237,237)" fg:x="321683" fg:w="4851"/><text x="49.9742%" y="575.50"></text></g><g><title>    mesh.sides = np.array(sides, dtype=np.int64) (4,876 samples, 0.75%)</title><rect x="50.4741%" y="144" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:304 (build_gemm) (4,876 samples, 0.75%)</title><rect x="50.4741%" y="166" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (4,876 samples, 0.75%)</title><rect x="50.4741%" y="188" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (4,876 samples, 0.75%)</title><rect x="50.4741%" y="210" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (4,876 samples, 0.75%)</title><rect x="50.4741%" y="232" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (4,876 samples, 0.75%)</title><rect x="50.4741%" y="254" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (4,876 samples, 0.75%)</title><rect x="50.4741%" y="276" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (4,876 samples, 0.75%)</title><rect x="50.4741%" y="298" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (4,876 samples, 0.75%)</title><rect x="50.4741%" y="320" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (4,876 samples, 0.75%)</title><rect x="50.4741%" y="342" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (4,876 samples, 0.75%)</title><rect x="50.4741%" y="364" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (4,876 samples, 0.75%)</title><rect x="50.4741%" y="386" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="399.50"></text></g><g><title>        self.get_mean_std() (4,876 samples, 0.75%)</title><rect x="50.4741%" y="408" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (4,876 samples, 0.75%)</title><rect x="50.4741%" y="430" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (4,876 samples, 0.75%)</title><rect x="50.4741%" y="452" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (4,876 samples, 0.75%)</title><rect x="50.4741%" y="474" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (4,876 samples, 0.75%)</title><rect x="50.4741%" y="496" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (4,876 samples, 0.75%)</title><rect x="50.4741%" y="518" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (4,876 samples, 0.75%)</title><rect x="50.4741%" y="540" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (4,876 samples, 0.75%)</title><rect x="50.4741%" y="562" width="0.7537%" height="21" fill="rgb(255,237,237)" fg:x="326534" fg:w="4876"/><text x="50.7241%" y="575.50"></text></g><g><title>    edge_points = get_edge_points(mesh) (22,501 samples, 3.48%)</title><rect x="51.7136%" y="232" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="245.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:457 (extract_features) (22,501 samples, 3.48%)</title><rect x="51.7136%" y="254" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="267.50">/m..</text></g><g><title>    mesh_data.features = extract_features(mesh_data) (22,501 samples, 3.48%)</title><rect x="51.7136%" y="276" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="289.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (22,501 samples, 3.48%)</title><rect x="51.7136%" y="298" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="311.50">/m..</text></g><g><title>        mesh_data = from_scratch(file, opt) (22,501 samples, 3.48%)</title><rect x="51.7136%" y="320" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="333.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (22,501 samples, 3.48%)</title><rect x="51.7136%" y="342" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="355.50">/m..</text></g><g><title>        fill_mesh(self, file, opt) (22,501 samples, 3.48%)</title><rect x="51.7136%" y="364" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="377.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (22,501 samples, 3.48%)</title><rect x="51.7136%" y="386" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="399.50">/m..</text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (22,501 samples, 3.48%)</title><rect x="51.7136%" y="408" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="421.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (22,501 samples, 3.48%)</title><rect x="51.7136%" y="430" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="443.50">/m..</text></g><g><title>            for i, data in enumerate(self): (22,501 samples, 3.48%)</title><rect x="51.7136%" y="452" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="465.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (22,501 samples, 3.48%)</title><rect x="51.7136%" y="474" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="487.50">/m..</text></g><g><title>        self.get_mean_std() (22,501 samples, 3.48%)</title><rect x="51.7136%" y="496" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="509.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (22,501 samples, 3.48%)</title><rect x="51.7136%" y="518" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="531.50">/m..</text></g><g><title>        dataset = ClassificationData(opt) (22,501 samples, 3.48%)</title><rect x="51.7136%" y="540" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="553.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (22,501 samples, 3.48%)</title><rect x="51.7136%" y="562" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="575.50">/m..</text></g><g><title>        self.dataset = CreateDataset(opt) (22,501 samples, 3.48%)</title><rect x="51.7136%" y="584" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="597.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (22,501 samples, 3.48%)</title><rect x="51.7136%" y="606" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="619.50">/m..</text></g><g><title>    dataset = DataLoader(opt) (22,501 samples, 3.48%)</title><rect x="51.7136%" y="628" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="641.50"> ..</text></g><g><title>train.py:17 (&lt;module&gt;) (22,501 samples, 3.48%)</title><rect x="51.7136%" y="650" width="3.4781%" height="21" fill="rgb(255,222,222)" fg:x="334553" fg:w="22501"/><text x="51.9636%" y="663.50">tr..</text></g><g><title>    return [edge_a[first_vertex], edge_a[1 - first_vertex], edge_b[second_vertex], edge_d[third_vertex]] (44,942 samples, 6.95%)</title><rect x="51.7136%" y="144" width="6.9469%" height="21" fill="rgb(255,210,210)" fg:x="334553" fg:w="44942"/><text x="51.9636%" y="157.50">    r..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:540 (get_side_points) (44,942 samples, 6.95%)</title><rect x="51.7136%" y="166" width="6.9469%" height="21" fill="rgb(255,210,210)" fg:x="334553" fg:w="44942"/><text x="51.9636%" y="179.50">/media..</text></g><g><title>        edge_points[edge_id] = get_side_points(mesh, edge_id) (44,942 samples, 6.95%)</title><rect x="51.7136%" y="188" width="6.9469%" height="21" fill="rgb(255,210,210)" fg:x="334553" fg:w="44942"/><text x="51.9636%" y="201.50">     ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:508 (get_edge_points) (44,942 samples, 6.95%)</title><rect x="51.7136%" y="210" width="6.9469%" height="21" fill="rgb(255,210,210)" fg:x="334553" fg:w="44942"/><text x="51.9636%" y="223.50">/media..</text></g><g><title>        edge_points = get_edge_points(mesh) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="232" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="245.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:450 (set_edge_lengths) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="254" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="267.50">/m..</text></g><g><title>    set_edge_lengths(mesh, edge_points) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="276" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="289.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:458 (extract_features) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="298" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="311.50">/m..</text></g><g><title>    mesh_data.features = extract_features(mesh_data) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="320" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="333.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="342" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="355.50">/m..</text></g><g><title>        mesh_data = from_scratch(file, opt) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="364" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="377.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="386" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="399.50">/m..</text></g><g><title>        fill_mesh(self, file, opt) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="408" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="421.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="430" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="443.50">/m..</text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="452" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="465.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="474" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="487.50">/m..</text></g><g><title>            for i, data in enumerate(self): (22,441 samples, 3.47%)</title><rect x="55.1917%" y="496" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="509.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="518" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="531.50">/m..</text></g><g><title>        self.get_mean_std() (22,441 samples, 3.47%)</title><rect x="55.1917%" y="540" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="553.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="562" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="575.50">/m..</text></g><g><title>        dataset = ClassificationData(opt) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="584" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="597.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="606" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="619.50">/m..</text></g><g><title>        self.dataset = CreateDataset(opt) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="628" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="641.50"> ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="650" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="663.50">/m..</text></g><g><title>    dataset = DataLoader(opt) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="672" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="685.50"> ..</text></g><g><title>train.py:17 (&lt;module&gt;) (22,441 samples, 3.47%)</title><rect x="55.1917%" y="694" width="3.4688%" height="21" fill="rgb(255,222,222)" fg:x="357054" fg:w="22441"/><text x="55.4417%" y="707.50">tr..</text></g><g><title>    faces = np.asarray(faces, dtype=int) (2,559 samples, 0.40%)</title><rect x="58.7958%" y="188" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:224 (fill_from_file) (2,559 samples, 0.40%)</title><rect x="58.7958%" y="210" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="223.50"></text></g><g><title>    mesh_data.vs, faces = fill_from_file(mesh_data, file) (2,559 samples, 0.40%)</title><rect x="58.7958%" y="232" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:69 (from_scratch) (2,559 samples, 0.40%)</title><rect x="58.7958%" y="254" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="267.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (2,559 samples, 0.40%)</title><rect x="58.7958%" y="276" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (2,559 samples, 0.40%)</title><rect x="58.7958%" y="298" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="311.50"></text></g><g><title>        fill_mesh(self, file, opt) (2,559 samples, 0.40%)</title><rect x="58.7958%" y="320" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (2,559 samples, 0.40%)</title><rect x="58.7958%" y="342" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="355.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (2,559 samples, 0.40%)</title><rect x="58.7958%" y="364" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (2,559 samples, 0.40%)</title><rect x="58.7958%" y="386" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="399.50"></text></g><g><title>            for i, data in enumerate(self): (2,559 samples, 0.40%)</title><rect x="58.7958%" y="408" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (2,559 samples, 0.40%)</title><rect x="58.7958%" y="430" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="443.50"></text></g><g><title>        self.get_mean_std() (2,559 samples, 0.40%)</title><rect x="58.7958%" y="452" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (2,559 samples, 0.40%)</title><rect x="58.7958%" y="474" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="487.50"></text></g><g><title>        dataset = ClassificationData(opt) (2,559 samples, 0.40%)</title><rect x="58.7958%" y="496" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (2,559 samples, 0.40%)</title><rect x="58.7958%" y="518" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="531.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (2,559 samples, 0.40%)</title><rect x="58.7958%" y="540" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (2,559 samples, 0.40%)</title><rect x="58.7958%" y="562" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="575.50"></text></g><g><title>    dataset = DataLoader(opt) (2,559 samples, 0.40%)</title><rect x="58.7958%" y="584" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="597.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (2,559 samples, 0.40%)</title><rect x="58.7958%" y="606" width="0.3956%" height="21" fill="rgb(255,240,240)" fg:x="380370" fg:w="2559"/><text x="59.0458%" y="619.50"></text></g><g><title>    return array(a, dtype, copy=False, order=order) (3,762 samples, 0.58%)</title><rect x="58.7944%" y="144" width="0.5815%" height="21" fill="rgb(255,238,238)" fg:x="380361" fg:w="3762"/><text x="59.0444%" y="157.50"></text></g><g><title>/home/siddharth/miniconda3/envs/new_MCNN/lib/python3.7/site-packages/numpy/core/numeric.py:501 (asarray) (3,762 samples, 0.58%)</title><rect x="58.7944%" y="166" width="0.5815%" height="21" fill="rgb(255,238,238)" fg:x="380361" fg:w="3762"/><text x="59.0444%" y="179.50"></text></g><g><title>    edge_points = get_edge_points(mesh) (3,909 samples, 0.60%)</title><rect x="59.6481%" y="188" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:457 (extract_features) (3,909 samples, 0.60%)</title><rect x="59.6481%" y="210" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="223.50"></text></g><g><title>    mesh_data.features = extract_features(mesh_data) (3,909 samples, 0.60%)</title><rect x="59.6481%" y="232" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (3,909 samples, 0.60%)</title><rect x="59.6481%" y="254" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="267.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (3,909 samples, 0.60%)</title><rect x="59.6481%" y="276" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (3,909 samples, 0.60%)</title><rect x="59.6481%" y="298" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="311.50"></text></g><g><title>        fill_mesh(self, file, opt) (3,909 samples, 0.60%)</title><rect x="59.6481%" y="320" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (3,909 samples, 0.60%)</title><rect x="59.6481%" y="342" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="355.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (3,909 samples, 0.60%)</title><rect x="59.6481%" y="364" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (3,909 samples, 0.60%)</title><rect x="59.6481%" y="386" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="399.50"></text></g><g><title>            for i, data in enumerate(self): (3,909 samples, 0.60%)</title><rect x="59.6481%" y="408" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (3,909 samples, 0.60%)</title><rect x="59.6481%" y="430" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="443.50"></text></g><g><title>        self.get_mean_std() (3,909 samples, 0.60%)</title><rect x="59.6481%" y="452" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (3,909 samples, 0.60%)</title><rect x="59.6481%" y="474" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="487.50"></text></g><g><title>        dataset = ClassificationData(opt) (3,909 samples, 0.60%)</title><rect x="59.6481%" y="496" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (3,909 samples, 0.60%)</title><rect x="59.6481%" y="518" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="531.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (3,909 samples, 0.60%)</title><rect x="59.6481%" y="540" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (3,909 samples, 0.60%)</title><rect x="59.6481%" y="562" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="575.50"></text></g><g><title>    dataset = DataLoader(opt) (3,909 samples, 0.60%)</title><rect x="59.6481%" y="584" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="597.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (3,909 samples, 0.60%)</title><rect x="59.6481%" y="606" width="0.6042%" height="21" fill="rgb(255,238,238)" fg:x="385884" fg:w="3909"/><text x="59.8981%" y="619.50"></text></g><g><title>    return edge_points (5,314 samples, 0.82%)</title><rect x="59.6481%" y="144" width="0.8214%" height="21" fill="rgb(255,236,236)" fg:x="385884" fg:w="5314"/><text x="59.8981%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:510 (get_edge_points) (5,314 samples, 0.82%)</title><rect x="59.6481%" y="166" width="0.8214%" height="21" fill="rgb(255,236,236)" fg:x="385884" fg:w="5314"/><text x="59.8981%" y="179.50"></text></g><g><title>        edge_points = get_edge_points(mesh) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="188" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:450 (set_edge_lengths) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="210" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="223.50"></text></g><g><title>    set_edge_lengths(mesh, edge_points) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="232" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:458 (extract_features) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="254" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="267.50"></text></g><g><title>    mesh_data.features = extract_features(mesh_data) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="276" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="298" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="311.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="320" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="342" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="355.50"></text></g><g><title>        fill_mesh(self, file, opt) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="364" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="386" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="399.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="408" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="430" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="443.50"></text></g><g><title>            for i, data in enumerate(self): (1,405 samples, 0.22%)</title><rect x="60.2524%" y="452" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="474" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="487.50"></text></g><g><title>        self.get_mean_std() (1,405 samples, 0.22%)</title><rect x="60.2524%" y="496" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="518" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="531.50"></text></g><g><title>        dataset = ClassificationData(opt) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="540" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="562" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="575.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="584" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="597.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="606" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="619.50"></text></g><g><title>    dataset = DataLoader(opt) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="628" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="641.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (1,405 samples, 0.22%)</title><rect x="60.2524%" y="650" width="0.2172%" height="21" fill="rgb(255,243,243)" fg:x="389793" fg:w="1405"/><text x="60.5024%" y="663.50"></text></g><g><title>    return ufunc.reduce(obj, axis, dtype, out, **passkwargs) (2,214 samples, 0.34%)</title><rect x="61.1744%" y="144" width="0.3422%" height="21" fill="rgb(255,241,241)" fg:x="395758" fg:w="2214"/><text x="61.4244%" y="157.50"></text></g><g><title>/home/siddharth/miniconda3/envs/new_MCNN/lib/python3.7/site-packages/numpy/core/fromnumeric.py:83 (_wrapreduction) (2,214 samples, 0.34%)</title><rect x="61.1744%" y="166" width="0.3422%" height="21" fill="rgb(255,241,241)" fg:x="395758" fg:w="2214"/><text x="61.4244%" y="179.50"></text></g><g><title>                          initial=initial) (2,112 samples, 0.33%)</title><rect x="61.1902%" y="188" width="0.3265%" height="21" fill="rgb(255,241,241)" fg:x="395860" fg:w="2112"/><text x="61.4402%" y="201.50"></text></g><g><title>/home/siddharth/miniconda3/envs/new_MCNN/lib/python3.7/site-packages/numpy/core/fromnumeric.py:1930 (sum) (2,112 samples, 0.33%)</title><rect x="61.1902%" y="210" width="0.3265%" height="21" fill="rgb(255,241,241)" fg:x="395860" fg:w="2112"/><text x="61.4402%" y="223.50"></text></g><g><title>    vs, faces = [], [] (1,620 samples, 0.25%)</title><rect x="61.7650%" y="144" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:206 (fill_from_file) (1,620 samples, 0.25%)</title><rect x="61.7650%" y="166" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="179.50"></text></g><g><title>    mesh_data.vs, faces = fill_from_file(mesh_data, file) (1,620 samples, 0.25%)</title><rect x="61.7650%" y="188" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:69 (from_scratch) (1,620 samples, 0.25%)</title><rect x="61.7650%" y="210" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (1,620 samples, 0.25%)</title><rect x="61.7650%" y="232" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (1,620 samples, 0.25%)</title><rect x="61.7650%" y="254" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (1,620 samples, 0.25%)</title><rect x="61.7650%" y="276" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (1,620 samples, 0.25%)</title><rect x="61.7650%" y="298" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (1,620 samples, 0.25%)</title><rect x="61.7650%" y="320" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (1,620 samples, 0.25%)</title><rect x="61.7650%" y="342" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (1,620 samples, 0.25%)</title><rect x="61.7650%" y="364" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (1,620 samples, 0.25%)</title><rect x="61.7650%" y="386" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="399.50"></text></g><g><title>        self.get_mean_std() (1,620 samples, 0.25%)</title><rect x="61.7650%" y="408" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (1,620 samples, 0.25%)</title><rect x="61.7650%" y="430" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (1,620 samples, 0.25%)</title><rect x="61.7650%" y="452" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (1,620 samples, 0.25%)</title><rect x="61.7650%" y="474" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (1,620 samples, 0.25%)</title><rect x="61.7650%" y="496" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (1,620 samples, 0.25%)</title><rect x="61.7650%" y="518" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (1,620 samples, 0.25%)</title><rect x="61.7650%" y="540" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (1,620 samples, 0.25%)</title><rect x="61.7650%" y="562" width="0.2504%" height="21" fill="rgb(255,242,242)" fg:x="399579" fg:w="1620"/><text x="62.0150%" y="575.50"></text></g><g><title>    edge_points = get_edge_points(mesh) (3,726 samples, 0.58%)</title><rect x="62.2288%" y="232" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:457 (extract_features) (3,726 samples, 0.58%)</title><rect x="62.2288%" y="254" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="267.50"></text></g><g><title>    mesh_data.features = extract_features(mesh_data) (3,726 samples, 0.58%)</title><rect x="62.2288%" y="276" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (3,726 samples, 0.58%)</title><rect x="62.2288%" y="298" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="311.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (3,726 samples, 0.58%)</title><rect x="62.2288%" y="320" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (3,726 samples, 0.58%)</title><rect x="62.2288%" y="342" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="355.50"></text></g><g><title>        fill_mesh(self, file, opt) (3,726 samples, 0.58%)</title><rect x="62.2288%" y="364" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (3,726 samples, 0.58%)</title><rect x="62.2288%" y="386" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="399.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (3,726 samples, 0.58%)</title><rect x="62.2288%" y="408" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (3,726 samples, 0.58%)</title><rect x="62.2288%" y="430" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="443.50"></text></g><g><title>            for i, data in enumerate(self): (3,726 samples, 0.58%)</title><rect x="62.2288%" y="452" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (3,726 samples, 0.58%)</title><rect x="62.2288%" y="474" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="487.50"></text></g><g><title>        self.get_mean_std() (3,726 samples, 0.58%)</title><rect x="62.2288%" y="496" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (3,726 samples, 0.58%)</title><rect x="62.2288%" y="518" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="531.50"></text></g><g><title>        dataset = ClassificationData(opt) (3,726 samples, 0.58%)</title><rect x="62.2288%" y="540" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (3,726 samples, 0.58%)</title><rect x="62.2288%" y="562" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="575.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (3,726 samples, 0.58%)</title><rect x="62.2288%" y="584" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="597.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (3,726 samples, 0.58%)</title><rect x="62.2288%" y="606" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="619.50"></text></g><g><title>    dataset = DataLoader(opt) (3,726 samples, 0.58%)</title><rect x="62.2288%" y="628" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="641.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (3,726 samples, 0.58%)</title><rect x="62.2288%" y="650" width="0.5759%" height="21" fill="rgb(255,238,238)" fg:x="402579" fg:w="3726"/><text x="62.4788%" y="663.50"></text></g><g><title>        edge_b = mesh.edges[mesh.gemm_edges[edge_id, 0]] (7,438 samples, 1.15%)</title><rect x="62.2288%" y="144" width="1.1497%" height="21" fill="rgb(255,233,233)" fg:x="402579" fg:w="7438"/><text x="62.4788%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:523 (get_side_points) (7,438 samples, 1.15%)</title><rect x="62.2288%" y="166" width="1.1497%" height="21" fill="rgb(255,233,233)" fg:x="402579" fg:w="7438"/><text x="62.4788%" y="179.50"></text></g><g><title>        edge_points[edge_id] = get_side_points(mesh, edge_id) (7,438 samples, 1.15%)</title><rect x="62.2288%" y="188" width="1.1497%" height="21" fill="rgb(255,233,233)" fg:x="402579" fg:w="7438"/><text x="62.4788%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:508 (get_edge_points) (7,438 samples, 1.15%)</title><rect x="62.2288%" y="210" width="1.1497%" height="21" fill="rgb(255,233,233)" fg:x="402579" fg:w="7438"/><text x="62.4788%" y="223.50"></text></g><g><title>        edge_points = get_edge_points(mesh) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="232" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:450 (set_edge_lengths) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="254" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="267.50"></text></g><g><title>    set_edge_lengths(mesh, edge_points) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="276" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:458 (extract_features) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="298" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="311.50"></text></g><g><title>    mesh_data.features = extract_features(mesh_data) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="320" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="342" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="355.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="364" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="386" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="399.50"></text></g><g><title>        fill_mesh(self, file, opt) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="408" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="430" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="443.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="452" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="474" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="487.50"></text></g><g><title>            for i, data in enumerate(self): (3,712 samples, 0.57%)</title><rect x="62.8047%" y="496" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="518" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="531.50"></text></g><g><title>        self.get_mean_std() (3,712 samples, 0.57%)</title><rect x="62.8047%" y="540" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="562" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="575.50"></text></g><g><title>        dataset = ClassificationData(opt) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="584" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="597.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="606" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="619.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="628" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="641.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="650" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="663.50"></text></g><g><title>    dataset = DataLoader(opt) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="672" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="685.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (3,712 samples, 0.57%)</title><rect x="62.8047%" y="694" width="0.5738%" height="21" fill="rgb(255,238,238)" fg:x="406305" fg:w="3712"/><text x="63.0547%" y="707.50"></text></g><g><title>    edge_points = get_edge_points(mesh) (3,285 samples, 0.51%)</title><rect x="63.3785%" y="232" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:457 (extract_features) (3,285 samples, 0.51%)</title><rect x="63.3785%" y="254" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="267.50"></text></g><g><title>    mesh_data.features = extract_features(mesh_data) (3,285 samples, 0.51%)</title><rect x="63.3785%" y="276" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (3,285 samples, 0.51%)</title><rect x="63.3785%" y="298" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="311.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (3,285 samples, 0.51%)</title><rect x="63.3785%" y="320" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (3,285 samples, 0.51%)</title><rect x="63.3785%" y="342" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="355.50"></text></g><g><title>        fill_mesh(self, file, opt) (3,285 samples, 0.51%)</title><rect x="63.3785%" y="364" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (3,285 samples, 0.51%)</title><rect x="63.3785%" y="386" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="399.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (3,285 samples, 0.51%)</title><rect x="63.3785%" y="408" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (3,285 samples, 0.51%)</title><rect x="63.3785%" y="430" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="443.50"></text></g><g><title>            for i, data in enumerate(self): (3,285 samples, 0.51%)</title><rect x="63.3785%" y="452" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (3,285 samples, 0.51%)</title><rect x="63.3785%" y="474" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="487.50"></text></g><g><title>        self.get_mean_std() (3,285 samples, 0.51%)</title><rect x="63.3785%" y="496" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (3,285 samples, 0.51%)</title><rect x="63.3785%" y="518" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="531.50"></text></g><g><title>        dataset = ClassificationData(opt) (3,285 samples, 0.51%)</title><rect x="63.3785%" y="540" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (3,285 samples, 0.51%)</title><rect x="63.3785%" y="562" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="575.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (3,285 samples, 0.51%)</title><rect x="63.3785%" y="584" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="597.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (3,285 samples, 0.51%)</title><rect x="63.3785%" y="606" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="619.50"></text></g><g><title>    dataset = DataLoader(opt) (3,285 samples, 0.51%)</title><rect x="63.3785%" y="628" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="641.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (3,285 samples, 0.51%)</title><rect x="63.3785%" y="650" width="0.5078%" height="21" fill="rgb(255,239,239)" fg:x="410017" fg:w="3285"/><text x="63.6285%" y="663.50"></text></g><g><title>        edge_c = mesh.edges[mesh.gemm_edges[edge_id, 1]] (6,495 samples, 1.00%)</title><rect x="63.3785%" y="144" width="1.0040%" height="21" fill="rgb(255,235,235)" fg:x="410017" fg:w="6495"/><text x="63.6285%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:524 (get_side_points) (6,495 samples, 1.00%)</title><rect x="63.3785%" y="166" width="1.0040%" height="21" fill="rgb(255,235,235)" fg:x="410017" fg:w="6495"/><text x="63.6285%" y="179.50"></text></g><g><title>        edge_points[edge_id] = get_side_points(mesh, edge_id) (6,495 samples, 1.00%)</title><rect x="63.3785%" y="188" width="1.0040%" height="21" fill="rgb(255,235,235)" fg:x="410017" fg:w="6495"/><text x="63.6285%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:508 (get_edge_points) (6,495 samples, 1.00%)</title><rect x="63.3785%" y="210" width="1.0040%" height="21" fill="rgb(255,235,235)" fg:x="410017" fg:w="6495"/><text x="63.6285%" y="223.50"></text></g><g><title>        edge_points = get_edge_points(mesh) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="232" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:450 (set_edge_lengths) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="254" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="267.50"></text></g><g><title>    set_edge_lengths(mesh, edge_points) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="276" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:458 (extract_features) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="298" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="311.50"></text></g><g><title>    mesh_data.features = extract_features(mesh_data) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="320" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="342" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="355.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="364" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="386" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="399.50"></text></g><g><title>        fill_mesh(self, file, opt) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="408" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="430" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="443.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="452" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="474" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="487.50"></text></g><g><title>            for i, data in enumerate(self): (3,210 samples, 0.50%)</title><rect x="63.8863%" y="496" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="518" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="531.50"></text></g><g><title>        self.get_mean_std() (3,210 samples, 0.50%)</title><rect x="63.8863%" y="540" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="562" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="575.50"></text></g><g><title>        dataset = ClassificationData(opt) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="584" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="597.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="606" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="619.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="628" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="641.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="650" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="663.50"></text></g><g><title>    dataset = DataLoader(opt) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="672" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="685.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (3,210 samples, 0.50%)</title><rect x="63.8863%" y="694" width="0.4962%" height="21" fill="rgb(255,239,239)" fg:x="413302" fg:w="3210"/><text x="64.1363%" y="707.50"></text></g><g><title>    edge_points = get_edge_points(mesh) (1,828 samples, 0.28%)</title><rect x="64.3825%" y="232" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:457 (extract_features) (1,828 samples, 0.28%)</title><rect x="64.3825%" y="254" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="267.50"></text></g><g><title>    mesh_data.features = extract_features(mesh_data) (1,828 samples, 0.28%)</title><rect x="64.3825%" y="276" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (1,828 samples, 0.28%)</title><rect x="64.3825%" y="298" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="311.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (1,828 samples, 0.28%)</title><rect x="64.3825%" y="320" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (1,828 samples, 0.28%)</title><rect x="64.3825%" y="342" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="355.50"></text></g><g><title>        fill_mesh(self, file, opt) (1,828 samples, 0.28%)</title><rect x="64.3825%" y="364" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (1,828 samples, 0.28%)</title><rect x="64.3825%" y="386" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="399.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (1,828 samples, 0.28%)</title><rect x="64.3825%" y="408" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (1,828 samples, 0.28%)</title><rect x="64.3825%" y="430" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="443.50"></text></g><g><title>            for i, data in enumerate(self): (1,828 samples, 0.28%)</title><rect x="64.3825%" y="452" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (1,828 samples, 0.28%)</title><rect x="64.3825%" y="474" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="487.50"></text></g><g><title>        self.get_mean_std() (1,828 samples, 0.28%)</title><rect x="64.3825%" y="496" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (1,828 samples, 0.28%)</title><rect x="64.3825%" y="518" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="531.50"></text></g><g><title>        dataset = ClassificationData(opt) (1,828 samples, 0.28%)</title><rect x="64.3825%" y="540" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (1,828 samples, 0.28%)</title><rect x="64.3825%" y="562" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="575.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (1,828 samples, 0.28%)</title><rect x="64.3825%" y="584" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="597.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (1,828 samples, 0.28%)</title><rect x="64.3825%" y="606" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="619.50"></text></g><g><title>    dataset = DataLoader(opt) (1,828 samples, 0.28%)</title><rect x="64.3825%" y="628" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="641.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (1,828 samples, 0.28%)</title><rect x="64.3825%" y="650" width="0.2826%" height="21" fill="rgb(255,242,242)" fg:x="416512" fg:w="1828"/><text x="64.6325%" y="663.50"></text></g><g><title>        edge_c = mesh.edges[mesh.gemm_edges[edge_id, 3]] (3,851 samples, 0.60%)</title><rect x="64.3825%" y="144" width="0.5953%" height="21" fill="rgb(255,238,238)" fg:x="416512" fg:w="3851"/><text x="64.6325%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:521 (get_side_points) (3,851 samples, 0.60%)</title><rect x="64.3825%" y="166" width="0.5953%" height="21" fill="rgb(255,238,238)" fg:x="416512" fg:w="3851"/><text x="64.6325%" y="179.50"></text></g><g><title>        edge_points[edge_id] = get_side_points(mesh, edge_id) (3,851 samples, 0.60%)</title><rect x="64.3825%" y="188" width="0.5953%" height="21" fill="rgb(255,238,238)" fg:x="416512" fg:w="3851"/><text x="64.6325%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:508 (get_edge_points) (3,851 samples, 0.60%)</title><rect x="64.3825%" y="210" width="0.5953%" height="21" fill="rgb(255,238,238)" fg:x="416512" fg:w="3851"/><text x="64.6325%" y="223.50"></text></g><g><title>        edge_points = get_edge_points(mesh) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="232" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:450 (set_edge_lengths) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="254" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="267.50"></text></g><g><title>    set_edge_lengths(mesh, edge_points) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="276" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:458 (extract_features) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="298" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="311.50"></text></g><g><title>    mesh_data.features = extract_features(mesh_data) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="320" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="342" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="355.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="364" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="386" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="399.50"></text></g><g><title>        fill_mesh(self, file, opt) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="408" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="430" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="443.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="452" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="474" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="487.50"></text></g><g><title>            for i, data in enumerate(self): (2,023 samples, 0.31%)</title><rect x="64.6650%" y="496" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="518" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="531.50"></text></g><g><title>        self.get_mean_std() (2,023 samples, 0.31%)</title><rect x="64.6650%" y="540" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="562" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="575.50"></text></g><g><title>        dataset = ClassificationData(opt) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="584" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="597.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="606" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="619.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="628" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="641.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="650" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="663.50"></text></g><g><title>    dataset = DataLoader(opt) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="672" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="685.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (2,023 samples, 0.31%)</title><rect x="64.6650%" y="694" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="418340" fg:w="2023"/><text x="64.9150%" y="707.50"></text></g><g><title>    edge_points = get_edge_points(mesh) (3,350 samples, 0.52%)</title><rect x="64.9777%" y="232" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:457 (extract_features) (3,350 samples, 0.52%)</title><rect x="64.9777%" y="254" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="267.50"></text></g><g><title>    mesh_data.features = extract_features(mesh_data) (3,350 samples, 0.52%)</title><rect x="64.9777%" y="276" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (3,350 samples, 0.52%)</title><rect x="64.9777%" y="298" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="311.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (3,350 samples, 0.52%)</title><rect x="64.9777%" y="320" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (3,350 samples, 0.52%)</title><rect x="64.9777%" y="342" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="355.50"></text></g><g><title>        fill_mesh(self, file, opt) (3,350 samples, 0.52%)</title><rect x="64.9777%" y="364" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (3,350 samples, 0.52%)</title><rect x="64.9777%" y="386" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="399.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (3,350 samples, 0.52%)</title><rect x="64.9777%" y="408" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (3,350 samples, 0.52%)</title><rect x="64.9777%" y="430" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="443.50"></text></g><g><title>            for i, data in enumerate(self): (3,350 samples, 0.52%)</title><rect x="64.9777%" y="452" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (3,350 samples, 0.52%)</title><rect x="64.9777%" y="474" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="487.50"></text></g><g><title>        self.get_mean_std() (3,350 samples, 0.52%)</title><rect x="64.9777%" y="496" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (3,350 samples, 0.52%)</title><rect x="64.9777%" y="518" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="531.50"></text></g><g><title>        dataset = ClassificationData(opt) (3,350 samples, 0.52%)</title><rect x="64.9777%" y="540" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (3,350 samples, 0.52%)</title><rect x="64.9777%" y="562" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="575.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (3,350 samples, 0.52%)</title><rect x="64.9777%" y="584" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="597.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (3,350 samples, 0.52%)</title><rect x="64.9777%" y="606" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="619.50"></text></g><g><title>    dataset = DataLoader(opt) (3,350 samples, 0.52%)</title><rect x="64.9777%" y="628" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="641.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (3,350 samples, 0.52%)</title><rect x="64.9777%" y="650" width="0.5178%" height="21" fill="rgb(255,239,239)" fg:x="420363" fg:w="3350"/><text x="65.2277%" y="663.50"></text></g><g><title>        edge_d = mesh.edges[mesh.gemm_edges[edge_id, 2]] (6,641 samples, 1.03%)</title><rect x="64.9777%" y="144" width="1.0265%" height="21" fill="rgb(255,234,234)" fg:x="420363" fg:w="6641"/><text x="65.2277%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:529 (get_side_points) (6,641 samples, 1.03%)</title><rect x="64.9777%" y="166" width="1.0265%" height="21" fill="rgb(255,234,234)" fg:x="420363" fg:w="6641"/><text x="65.2277%" y="179.50"></text></g><g><title>        edge_points[edge_id] = get_side_points(mesh, edge_id) (6,641 samples, 1.03%)</title><rect x="64.9777%" y="188" width="1.0265%" height="21" fill="rgb(255,234,234)" fg:x="420363" fg:w="6641"/><text x="65.2277%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:508 (get_edge_points) (6,641 samples, 1.03%)</title><rect x="64.9777%" y="210" width="1.0265%" height="21" fill="rgb(255,234,234)" fg:x="420363" fg:w="6641"/><text x="65.2277%" y="223.50"></text></g><g><title>        edge_points = get_edge_points(mesh) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="232" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:450 (set_edge_lengths) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="254" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="267.50"></text></g><g><title>    set_edge_lengths(mesh, edge_points) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="276" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:458 (extract_features) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="298" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="311.50"></text></g><g><title>    mesh_data.features = extract_features(mesh_data) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="320" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="342" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="355.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="364" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="386" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="399.50"></text></g><g><title>        fill_mesh(self, file, opt) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="408" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="430" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="443.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="452" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="474" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="487.50"></text></g><g><title>            for i, data in enumerate(self): (3,291 samples, 0.51%)</title><rect x="65.4956%" y="496" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="518" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="531.50"></text></g><g><title>        self.get_mean_std() (3,291 samples, 0.51%)</title><rect x="65.4956%" y="540" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="562" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="575.50"></text></g><g><title>        dataset = ClassificationData(opt) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="584" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="597.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="606" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="619.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="628" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="641.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="650" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="663.50"></text></g><g><title>    dataset = DataLoader(opt) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="672" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="685.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (3,291 samples, 0.51%)</title><rect x="65.4956%" y="694" width="0.5087%" height="21" fill="rgb(255,239,239)" fg:x="423713" fg:w="3291"/><text x="65.7456%" y="707.50"></text></g><g><title>    edge_points = get_edge_points(mesh) (3,138 samples, 0.49%)</title><rect x="66.0043%" y="232" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:457 (extract_features) (3,138 samples, 0.49%)</title><rect x="66.0043%" y="254" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="267.50"></text></g><g><title>    mesh_data.features = extract_features(mesh_data) (3,138 samples, 0.49%)</title><rect x="66.0043%" y="276" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (3,138 samples, 0.49%)</title><rect x="66.0043%" y="298" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="311.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (3,138 samples, 0.49%)</title><rect x="66.0043%" y="320" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (3,138 samples, 0.49%)</title><rect x="66.0043%" y="342" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="355.50"></text></g><g><title>        fill_mesh(self, file, opt) (3,138 samples, 0.49%)</title><rect x="66.0043%" y="364" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (3,138 samples, 0.49%)</title><rect x="66.0043%" y="386" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="399.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (3,138 samples, 0.49%)</title><rect x="66.0043%" y="408" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (3,138 samples, 0.49%)</title><rect x="66.0043%" y="430" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="443.50"></text></g><g><title>            for i, data in enumerate(self): (3,138 samples, 0.49%)</title><rect x="66.0043%" y="452" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (3,138 samples, 0.49%)</title><rect x="66.0043%" y="474" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="487.50"></text></g><g><title>        self.get_mean_std() (3,138 samples, 0.49%)</title><rect x="66.0043%" y="496" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (3,138 samples, 0.49%)</title><rect x="66.0043%" y="518" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="531.50"></text></g><g><title>        dataset = ClassificationData(opt) (3,138 samples, 0.49%)</title><rect x="66.0043%" y="540" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (3,138 samples, 0.49%)</title><rect x="66.0043%" y="562" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="575.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (3,138 samples, 0.49%)</title><rect x="66.0043%" y="584" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="597.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (3,138 samples, 0.49%)</title><rect x="66.0043%" y="606" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="619.50"></text></g><g><title>    dataset = DataLoader(opt) (3,138 samples, 0.49%)</title><rect x="66.0043%" y="628" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="641.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (3,138 samples, 0.49%)</title><rect x="66.0043%" y="650" width="0.4851%" height="21" fill="rgb(255,239,239)" fg:x="427004" fg:w="3138"/><text x="66.2543%" y="663.50"></text></g><g><title>        edge_e = mesh.edges[mesh.gemm_edges[edge_id, 3]] (6,250 samples, 0.97%)</title><rect x="66.0043%" y="144" width="0.9661%" height="21" fill="rgb(255,235,235)" fg:x="427004" fg:w="6250"/><text x="66.2543%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:530 (get_side_points) (6,250 samples, 0.97%)</title><rect x="66.0043%" y="166" width="0.9661%" height="21" fill="rgb(255,235,235)" fg:x="427004" fg:w="6250"/><text x="66.2543%" y="179.50"></text></g><g><title>        edge_points[edge_id] = get_side_points(mesh, edge_id) (6,250 samples, 0.97%)</title><rect x="66.0043%" y="188" width="0.9661%" height="21" fill="rgb(255,235,235)" fg:x="427004" fg:w="6250"/><text x="66.2543%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:508 (get_edge_points) (6,250 samples, 0.97%)</title><rect x="66.0043%" y="210" width="0.9661%" height="21" fill="rgb(255,235,235)" fg:x="427004" fg:w="6250"/><text x="66.2543%" y="223.50"></text></g><g><title>        edge_points = get_edge_points(mesh) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="232" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:450 (set_edge_lengths) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="254" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="267.50"></text></g><g><title>    set_edge_lengths(mesh, edge_points) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="276" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:458 (extract_features) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="298" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="311.50"></text></g><g><title>    mesh_data.features = extract_features(mesh_data) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="320" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="342" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="355.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="364" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="386" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="399.50"></text></g><g><title>        fill_mesh(self, file, opt) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="408" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="430" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="443.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="452" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="474" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="487.50"></text></g><g><title>            for i, data in enumerate(self): (3,112 samples, 0.48%)</title><rect x="66.4893%" y="496" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="518" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="531.50"></text></g><g><title>        self.get_mean_std() (3,112 samples, 0.48%)</title><rect x="66.4893%" y="540" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="562" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="575.50"></text></g><g><title>        dataset = ClassificationData(opt) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="584" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="597.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="606" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="619.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="628" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="641.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="650" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="663.50"></text></g><g><title>    dataset = DataLoader(opt) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="672" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="685.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (3,112 samples, 0.48%)</title><rect x="66.4893%" y="694" width="0.4810%" height="21" fill="rgb(255,239,239)" fg:x="430142" fg:w="3112"/><text x="66.7393%" y="707.50"></text></g><g><title>    edge_points = get_edge_points(mesh) (14,064 samples, 2.17%)</title><rect x="66.9768%" y="188" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:457 (extract_features) (14,064 samples, 2.17%)</title><rect x="66.9768%" y="210" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="223.50"></text></g><g><title>    mesh_data.features = extract_features(mesh_data) (14,064 samples, 2.17%)</title><rect x="66.9768%" y="232" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (14,064 samples, 2.17%)</title><rect x="66.9768%" y="254" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="267.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (14,064 samples, 2.17%)</title><rect x="66.9768%" y="276" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (14,064 samples, 2.17%)</title><rect x="66.9768%" y="298" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="311.50"></text></g><g><title>        fill_mesh(self, file, opt) (14,064 samples, 2.17%)</title><rect x="66.9768%" y="320" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (14,064 samples, 2.17%)</title><rect x="66.9768%" y="342" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="355.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (14,064 samples, 2.17%)</title><rect x="66.9768%" y="364" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (14,064 samples, 2.17%)</title><rect x="66.9768%" y="386" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="399.50"></text></g><g><title>            for i, data in enumerate(self): (14,064 samples, 2.17%)</title><rect x="66.9768%" y="408" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (14,064 samples, 2.17%)</title><rect x="66.9768%" y="430" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="443.50"></text></g><g><title>        self.get_mean_std() (14,064 samples, 2.17%)</title><rect x="66.9768%" y="452" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (14,064 samples, 2.17%)</title><rect x="66.9768%" y="474" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="487.50"></text></g><g><title>        dataset = ClassificationData(opt) (14,064 samples, 2.17%)</title><rect x="66.9768%" y="496" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (14,064 samples, 2.17%)</title><rect x="66.9768%" y="518" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="531.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (14,064 samples, 2.17%)</title><rect x="66.9768%" y="540" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (14,064 samples, 2.17%)</title><rect x="66.9768%" y="562" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="575.50"></text></g><g><title>    dataset = DataLoader(opt) (14,064 samples, 2.17%)</title><rect x="66.9768%" y="584" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="597.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (14,064 samples, 2.17%)</title><rect x="66.9768%" y="606" width="2.1739%" height="21" fill="rgb(255,227,227)" fg:x="433296" fg:w="14064"/><text x="67.2268%" y="619.50"></text></g><g><title>        edge_points[edge_id] = get_side_points(mesh, edge_id) (30,476 samples, 4.71%)</title><rect x="66.9768%" y="144" width="4.7108%" height="21" fill="rgb(255,217,217)" fg:x="433296" fg:w="30476"/><text x="67.2268%" y="157.50">  ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:508 (get_edge_points) (30,476 samples, 4.71%)</title><rect x="66.9768%" y="166" width="4.7108%" height="21" fill="rgb(255,217,217)" fg:x="433296" fg:w="30476"/><text x="67.2268%" y="179.50">/me..</text></g><g><title>        edge_points = get_edge_points(mesh) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="188" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="201.50">..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:450 (set_edge_lengths) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="210" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="223.50">/..</text></g><g><title>    set_edge_lengths(mesh, edge_points) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="232" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="245.50">..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:458 (extract_features) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="254" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="267.50">/..</text></g><g><title>    mesh_data.features = extract_features(mesh_data) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="276" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="289.50">..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:88 (from_scratch) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="298" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="311.50">/..</text></g><g><title>        mesh_data = from_scratch(file, opt) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="320" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="333.50">..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="342" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="355.50">/..</text></g><g><title>        fill_mesh(self, file, opt) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="364" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="377.50">..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="386" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="399.50">/..</text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="408" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="421.50">..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="430" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="443.50">/..</text></g><g><title>            for i, data in enumerate(self): (16,412 samples, 2.54%)</title><rect x="69.1508%" y="452" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="465.50">..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="474" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="487.50">/..</text></g><g><title>        self.get_mean_std() (16,412 samples, 2.54%)</title><rect x="69.1508%" y="496" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="509.50">..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="518" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="531.50">/..</text></g><g><title>        dataset = ClassificationData(opt) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="540" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="553.50">..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="562" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="575.50">/..</text></g><g><title>        self.dataset = CreateDataset(opt) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="584" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="597.50">..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="606" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="619.50">/..</text></g><g><title>    dataset = DataLoader(opt) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="628" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="641.50">..</text></g><g><title>train.py:17 (&lt;module&gt;) (16,412 samples, 2.54%)</title><rect x="69.1508%" y="650" width="2.5369%" height="21" fill="rgb(255,226,226)" fg:x="447360" fg:w="16412"/><text x="69.4008%" y="663.50">t..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:277 (build_gemm) (3,395 samples, 0.52%)</title><rect x="71.9058%" y="166" width="0.5248%" height="21" fill="rgb(255,239,239)" fg:x="465183" fg:w="3395"/><text x="72.1558%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (3,395 samples, 0.52%)</title><rect x="71.9058%" y="188" width="0.5248%" height="21" fill="rgb(255,239,239)" fg:x="465183" fg:w="3395"/><text x="72.1558%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (3,395 samples, 0.52%)</title><rect x="71.9058%" y="210" width="0.5248%" height="21" fill="rgb(255,239,239)" fg:x="465183" fg:w="3395"/><text x="72.1558%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (3,395 samples, 0.52%)</title><rect x="71.9058%" y="232" width="0.5248%" height="21" fill="rgb(255,239,239)" fg:x="465183" fg:w="3395"/><text x="72.1558%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (3,395 samples, 0.52%)</title><rect x="71.9058%" y="254" width="0.5248%" height="21" fill="rgb(255,239,239)" fg:x="465183" fg:w="3395"/><text x="72.1558%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (3,395 samples, 0.52%)</title><rect x="71.9058%" y="276" width="0.5248%" height="21" fill="rgb(255,239,239)" fg:x="465183" fg:w="3395"/><text x="72.1558%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (3,395 samples, 0.52%)</title><rect x="71.9058%" y="298" width="0.5248%" height="21" fill="rgb(255,239,239)" fg:x="465183" fg:w="3395"/><text x="72.1558%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (3,395 samples, 0.52%)</title><rect x="71.9058%" y="320" width="0.5248%" height="21" fill="rgb(255,239,239)" fg:x="465183" fg:w="3395"/><text x="72.1558%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (3,395 samples, 0.52%)</title><rect x="71.9058%" y="342" width="0.5248%" height="21" fill="rgb(255,239,239)" fg:x="465183" fg:w="3395"/><text x="72.1558%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (3,395 samples, 0.52%)</title><rect x="71.9058%" y="364" width="0.5248%" height="21" fill="rgb(255,239,239)" fg:x="465183" fg:w="3395"/><text x="72.1558%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (3,395 samples, 0.52%)</title><rect x="71.9058%" y="386" width="0.5248%" height="21" fill="rgb(255,239,239)" fg:x="465183" fg:w="3395"/><text x="72.1558%" y="399.50"></text></g><g><title>        self.get_mean_std() (3,395 samples, 0.52%)</title><rect x="71.9058%" y="408" width="0.5248%" height="21" fill="rgb(255,239,239)" fg:x="465183" fg:w="3395"/><text x="72.1558%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (3,395 samples, 0.52%)</title><rect x="71.9058%" y="430" width="0.5248%" height="21" fill="rgb(255,239,239)" fg:x="465183" fg:w="3395"/><text x="72.1558%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (3,395 samples, 0.52%)</title><rect x="71.9058%" y="452" width="0.5248%" height="21" fill="rgb(255,239,239)" fg:x="465183" fg:w="3395"/><text x="72.1558%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (3,395 samples, 0.52%)</title><rect x="71.9058%" y="474" width="0.5248%" height="21" fill="rgb(255,239,239)" fg:x="465183" fg:w="3395"/><text x="72.1558%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (3,395 samples, 0.52%)</title><rect x="71.9058%" y="496" width="0.5248%" height="21" fill="rgb(255,239,239)" fg:x="465183" fg:w="3395"/><text x="72.1558%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (3,395 samples, 0.52%)</title><rect x="71.9058%" y="518" width="0.5248%" height="21" fill="rgb(255,239,239)" fg:x="465183" fg:w="3395"/><text x="72.1558%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (3,395 samples, 0.52%)</title><rect x="71.9058%" y="540" width="0.5248%" height="21" fill="rgb(255,239,239)" fg:x="465183" fg:w="3395"/><text x="72.1558%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (3,395 samples, 0.52%)</title><rect x="71.9058%" y="562" width="0.5248%" height="21" fill="rgb(255,239,239)" fg:x="465183" fg:w="3395"/><text x="72.1558%" y="575.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:291 (build_gemm) (2,164 samples, 0.33%)</title><rect x="72.4306%" y="166" width="0.3345%" height="21" fill="rgb(255,241,241)" fg:x="468578" fg:w="2164"/><text x="72.6806%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (2,164 samples, 0.33%)</title><rect x="72.4306%" y="188" width="0.3345%" height="21" fill="rgb(255,241,241)" fg:x="468578" fg:w="2164"/><text x="72.6806%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (2,164 samples, 0.33%)</title><rect x="72.4306%" y="210" width="0.3345%" height="21" fill="rgb(255,241,241)" fg:x="468578" fg:w="2164"/><text x="72.6806%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (2,164 samples, 0.33%)</title><rect x="72.4306%" y="232" width="0.3345%" height="21" fill="rgb(255,241,241)" fg:x="468578" fg:w="2164"/><text x="72.6806%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (2,164 samples, 0.33%)</title><rect x="72.4306%" y="254" width="0.3345%" height="21" fill="rgb(255,241,241)" fg:x="468578" fg:w="2164"/><text x="72.6806%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (2,164 samples, 0.33%)</title><rect x="72.4306%" y="276" width="0.3345%" height="21" fill="rgb(255,241,241)" fg:x="468578" fg:w="2164"/><text x="72.6806%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (2,164 samples, 0.33%)</title><rect x="72.4306%" y="298" width="0.3345%" height="21" fill="rgb(255,241,241)" fg:x="468578" fg:w="2164"/><text x="72.6806%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (2,164 samples, 0.33%)</title><rect x="72.4306%" y="320" width="0.3345%" height="21" fill="rgb(255,241,241)" fg:x="468578" fg:w="2164"/><text x="72.6806%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (2,164 samples, 0.33%)</title><rect x="72.4306%" y="342" width="0.3345%" height="21" fill="rgb(255,241,241)" fg:x="468578" fg:w="2164"/><text x="72.6806%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (2,164 samples, 0.33%)</title><rect x="72.4306%" y="364" width="0.3345%" height="21" fill="rgb(255,241,241)" fg:x="468578" fg:w="2164"/><text x="72.6806%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (2,164 samples, 0.33%)</title><rect x="72.4306%" y="386" width="0.3345%" height="21" fill="rgb(255,241,241)" fg:x="468578" fg:w="2164"/><text x="72.6806%" y="399.50"></text></g><g><title>        self.get_mean_std() (2,164 samples, 0.33%)</title><rect x="72.4306%" y="408" width="0.3345%" height="21" fill="rgb(255,241,241)" fg:x="468578" fg:w="2164"/><text x="72.6806%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (2,164 samples, 0.33%)</title><rect x="72.4306%" y="430" width="0.3345%" height="21" fill="rgb(255,241,241)" fg:x="468578" fg:w="2164"/><text x="72.6806%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (2,164 samples, 0.33%)</title><rect x="72.4306%" y="452" width="0.3345%" height="21" fill="rgb(255,241,241)" fg:x="468578" fg:w="2164"/><text x="72.6806%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (2,164 samples, 0.33%)</title><rect x="72.4306%" y="474" width="0.3345%" height="21" fill="rgb(255,241,241)" fg:x="468578" fg:w="2164"/><text x="72.6806%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (2,164 samples, 0.33%)</title><rect x="72.4306%" y="496" width="0.3345%" height="21" fill="rgb(255,241,241)" fg:x="468578" fg:w="2164"/><text x="72.6806%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (2,164 samples, 0.33%)</title><rect x="72.4306%" y="518" width="0.3345%" height="21" fill="rgb(255,241,241)" fg:x="468578" fg:w="2164"/><text x="72.6806%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (2,164 samples, 0.33%)</title><rect x="72.4306%" y="540" width="0.3345%" height="21" fill="rgb(255,241,241)" fg:x="468578" fg:w="2164"/><text x="72.6806%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (2,164 samples, 0.33%)</title><rect x="72.4306%" y="562" width="0.3345%" height="21" fill="rgb(255,241,241)" fg:x="468578" fg:w="2164"/><text x="72.6806%" y="575.50"></text></g><g><title>        for idx, edge in enumerate(faces_edges): (7,523 samples, 1.16%)</title><rect x="71.9058%" y="144" width="1.1629%" height="21" fill="rgb(255,233,233)" fg:x="465183" fg:w="7523"/><text x="72.1558%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:296 (build_gemm) (1,964 samples, 0.30%)</title><rect x="72.7651%" y="166" width="0.3036%" height="21" fill="rgb(255,241,241)" fg:x="470742" fg:w="1964"/><text x="73.0151%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (1,964 samples, 0.30%)</title><rect x="72.7651%" y="188" width="0.3036%" height="21" fill="rgb(255,241,241)" fg:x="470742" fg:w="1964"/><text x="73.0151%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (1,964 samples, 0.30%)</title><rect x="72.7651%" y="210" width="0.3036%" height="21" fill="rgb(255,241,241)" fg:x="470742" fg:w="1964"/><text x="73.0151%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (1,964 samples, 0.30%)</title><rect x="72.7651%" y="232" width="0.3036%" height="21" fill="rgb(255,241,241)" fg:x="470742" fg:w="1964"/><text x="73.0151%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (1,964 samples, 0.30%)</title><rect x="72.7651%" y="254" width="0.3036%" height="21" fill="rgb(255,241,241)" fg:x="470742" fg:w="1964"/><text x="73.0151%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (1,964 samples, 0.30%)</title><rect x="72.7651%" y="276" width="0.3036%" height="21" fill="rgb(255,241,241)" fg:x="470742" fg:w="1964"/><text x="73.0151%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (1,964 samples, 0.30%)</title><rect x="72.7651%" y="298" width="0.3036%" height="21" fill="rgb(255,241,241)" fg:x="470742" fg:w="1964"/><text x="73.0151%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (1,964 samples, 0.30%)</title><rect x="72.7651%" y="320" width="0.3036%" height="21" fill="rgb(255,241,241)" fg:x="470742" fg:w="1964"/><text x="73.0151%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (1,964 samples, 0.30%)</title><rect x="72.7651%" y="342" width="0.3036%" height="21" fill="rgb(255,241,241)" fg:x="470742" fg:w="1964"/><text x="73.0151%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (1,964 samples, 0.30%)</title><rect x="72.7651%" y="364" width="0.3036%" height="21" fill="rgb(255,241,241)" fg:x="470742" fg:w="1964"/><text x="73.0151%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (1,964 samples, 0.30%)</title><rect x="72.7651%" y="386" width="0.3036%" height="21" fill="rgb(255,241,241)" fg:x="470742" fg:w="1964"/><text x="73.0151%" y="399.50"></text></g><g><title>        self.get_mean_std() (1,964 samples, 0.30%)</title><rect x="72.7651%" y="408" width="0.3036%" height="21" fill="rgb(255,241,241)" fg:x="470742" fg:w="1964"/><text x="73.0151%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (1,964 samples, 0.30%)</title><rect x="72.7651%" y="430" width="0.3036%" height="21" fill="rgb(255,241,241)" fg:x="470742" fg:w="1964"/><text x="73.0151%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (1,964 samples, 0.30%)</title><rect x="72.7651%" y="452" width="0.3036%" height="21" fill="rgb(255,241,241)" fg:x="470742" fg:w="1964"/><text x="73.0151%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (1,964 samples, 0.30%)</title><rect x="72.7651%" y="474" width="0.3036%" height="21" fill="rgb(255,241,241)" fg:x="470742" fg:w="1964"/><text x="73.0151%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (1,964 samples, 0.30%)</title><rect x="72.7651%" y="496" width="0.3036%" height="21" fill="rgb(255,241,241)" fg:x="470742" fg:w="1964"/><text x="73.0151%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (1,964 samples, 0.30%)</title><rect x="72.7651%" y="518" width="0.3036%" height="21" fill="rgb(255,241,241)" fg:x="470742" fg:w="1964"/><text x="73.0151%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (1,964 samples, 0.30%)</title><rect x="72.7651%" y="540" width="0.3036%" height="21" fill="rgb(255,241,241)" fg:x="470742" fg:w="1964"/><text x="73.0151%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (1,964 samples, 0.30%)</title><rect x="72.7651%" y="562" width="0.3036%" height="21" fill="rgb(255,241,241)" fg:x="470742" fg:w="1964"/><text x="73.0151%" y="575.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:242 (remove_non_manifolds) (1,880 samples, 0.29%)</title><rect x="73.0687%" y="166" width="0.2906%" height="21" fill="rgb(255,241,241)" fg:x="472706" fg:w="1880"/><text x="73.3187%" y="179.50"></text></g><g><title>    faces, face_areas = remove_non_manifolds(mesh_data, faces) (1,880 samples, 0.29%)</title><rect x="73.0687%" y="188" width="0.2906%" height="21" fill="rgb(255,241,241)" fg:x="472706" fg:w="1880"/><text x="73.3187%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:80 (from_scratch) (1,880 samples, 0.29%)</title><rect x="73.0687%" y="210" width="0.2906%" height="21" fill="rgb(255,241,241)" fg:x="472706" fg:w="1880"/><text x="73.3187%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (1,880 samples, 0.29%)</title><rect x="73.0687%" y="232" width="0.2906%" height="21" fill="rgb(255,241,241)" fg:x="472706" fg:w="1880"/><text x="73.3187%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (1,880 samples, 0.29%)</title><rect x="73.0687%" y="254" width="0.2906%" height="21" fill="rgb(255,241,241)" fg:x="472706" fg:w="1880"/><text x="73.3187%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (1,880 samples, 0.29%)</title><rect x="73.0687%" y="276" width="0.2906%" height="21" fill="rgb(255,241,241)" fg:x="472706" fg:w="1880"/><text x="73.3187%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (1,880 samples, 0.29%)</title><rect x="73.0687%" y="298" width="0.2906%" height="21" fill="rgb(255,241,241)" fg:x="472706" fg:w="1880"/><text x="73.3187%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (1,880 samples, 0.29%)</title><rect x="73.0687%" y="320" width="0.2906%" height="21" fill="rgb(255,241,241)" fg:x="472706" fg:w="1880"/><text x="73.3187%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (1,880 samples, 0.29%)</title><rect x="73.0687%" y="342" width="0.2906%" height="21" fill="rgb(255,241,241)" fg:x="472706" fg:w="1880"/><text x="73.3187%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (1,880 samples, 0.29%)</title><rect x="73.0687%" y="364" width="0.2906%" height="21" fill="rgb(255,241,241)" fg:x="472706" fg:w="1880"/><text x="73.3187%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (1,880 samples, 0.29%)</title><rect x="73.0687%" y="386" width="0.2906%" height="21" fill="rgb(255,241,241)" fg:x="472706" fg:w="1880"/><text x="73.3187%" y="399.50"></text></g><g><title>        self.get_mean_std() (1,880 samples, 0.29%)</title><rect x="73.0687%" y="408" width="0.2906%" height="21" fill="rgb(255,241,241)" fg:x="472706" fg:w="1880"/><text x="73.3187%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (1,880 samples, 0.29%)</title><rect x="73.0687%" y="430" width="0.2906%" height="21" fill="rgb(255,241,241)" fg:x="472706" fg:w="1880"/><text x="73.3187%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (1,880 samples, 0.29%)</title><rect x="73.0687%" y="452" width="0.2906%" height="21" fill="rgb(255,241,241)" fg:x="472706" fg:w="1880"/><text x="73.3187%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (1,880 samples, 0.29%)</title><rect x="73.0687%" y="474" width="0.2906%" height="21" fill="rgb(255,241,241)" fg:x="472706" fg:w="1880"/><text x="73.3187%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (1,880 samples, 0.29%)</title><rect x="73.0687%" y="496" width="0.2906%" height="21" fill="rgb(255,241,241)" fg:x="472706" fg:w="1880"/><text x="73.3187%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (1,880 samples, 0.29%)</title><rect x="73.0687%" y="518" width="0.2906%" height="21" fill="rgb(255,241,241)" fg:x="472706" fg:w="1880"/><text x="73.3187%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (1,880 samples, 0.29%)</title><rect x="73.0687%" y="540" width="0.2906%" height="21" fill="rgb(255,241,241)" fg:x="472706" fg:w="1880"/><text x="73.3187%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (1,880 samples, 0.29%)</title><rect x="73.0687%" y="562" width="0.2906%" height="21" fill="rgb(255,241,241)" fg:x="472706" fg:w="1880"/><text x="73.3187%" y="575.50"></text></g><g><title>        for i in range(3): (4,010 samples, 0.62%)</title><rect x="73.0687%" y="144" width="0.6198%" height="21" fill="rgb(255,238,238)" fg:x="472706" fg:w="4010"/><text x="73.3187%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:274 (build_gemm) (2,130 samples, 0.33%)</title><rect x="73.3593%" y="166" width="0.3292%" height="21" fill="rgb(255,241,241)" fg:x="474586" fg:w="2130"/><text x="73.6093%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (2,130 samples, 0.33%)</title><rect x="73.3593%" y="188" width="0.3292%" height="21" fill="rgb(255,241,241)" fg:x="474586" fg:w="2130"/><text x="73.6093%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (2,130 samples, 0.33%)</title><rect x="73.3593%" y="210" width="0.3292%" height="21" fill="rgb(255,241,241)" fg:x="474586" fg:w="2130"/><text x="73.6093%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (2,130 samples, 0.33%)</title><rect x="73.3593%" y="232" width="0.3292%" height="21" fill="rgb(255,241,241)" fg:x="474586" fg:w="2130"/><text x="73.6093%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (2,130 samples, 0.33%)</title><rect x="73.3593%" y="254" width="0.3292%" height="21" fill="rgb(255,241,241)" fg:x="474586" fg:w="2130"/><text x="73.6093%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (2,130 samples, 0.33%)</title><rect x="73.3593%" y="276" width="0.3292%" height="21" fill="rgb(255,241,241)" fg:x="474586" fg:w="2130"/><text x="73.6093%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (2,130 samples, 0.33%)</title><rect x="73.3593%" y="298" width="0.3292%" height="21" fill="rgb(255,241,241)" fg:x="474586" fg:w="2130"/><text x="73.6093%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (2,130 samples, 0.33%)</title><rect x="73.3593%" y="320" width="0.3292%" height="21" fill="rgb(255,241,241)" fg:x="474586" fg:w="2130"/><text x="73.6093%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (2,130 samples, 0.33%)</title><rect x="73.3593%" y="342" width="0.3292%" height="21" fill="rgb(255,241,241)" fg:x="474586" fg:w="2130"/><text x="73.6093%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (2,130 samples, 0.33%)</title><rect x="73.3593%" y="364" width="0.3292%" height="21" fill="rgb(255,241,241)" fg:x="474586" fg:w="2130"/><text x="73.6093%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (2,130 samples, 0.33%)</title><rect x="73.3593%" y="386" width="0.3292%" height="21" fill="rgb(255,241,241)" fg:x="474586" fg:w="2130"/><text x="73.6093%" y="399.50"></text></g><g><title>        self.get_mean_std() (2,130 samples, 0.33%)</title><rect x="73.3593%" y="408" width="0.3292%" height="21" fill="rgb(255,241,241)" fg:x="474586" fg:w="2130"/><text x="73.6093%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (2,130 samples, 0.33%)</title><rect x="73.3593%" y="430" width="0.3292%" height="21" fill="rgb(255,241,241)" fg:x="474586" fg:w="2130"/><text x="73.6093%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (2,130 samples, 0.33%)</title><rect x="73.3593%" y="452" width="0.3292%" height="21" fill="rgb(255,241,241)" fg:x="474586" fg:w="2130"/><text x="73.6093%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (2,130 samples, 0.33%)</title><rect x="73.3593%" y="474" width="0.3292%" height="21" fill="rgb(255,241,241)" fg:x="474586" fg:w="2130"/><text x="73.6093%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (2,130 samples, 0.33%)</title><rect x="73.3593%" y="496" width="0.3292%" height="21" fill="rgb(255,241,241)" fg:x="474586" fg:w="2130"/><text x="73.6093%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (2,130 samples, 0.33%)</title><rect x="73.3593%" y="518" width="0.3292%" height="21" fill="rgb(255,241,241)" fg:x="474586" fg:w="2130"/><text x="73.6093%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (2,130 samples, 0.33%)</title><rect x="73.3593%" y="540" width="0.3292%" height="21" fill="rgb(255,241,241)" fg:x="474586" fg:w="2130"/><text x="73.6093%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (2,130 samples, 0.33%)</title><rect x="73.3593%" y="562" width="0.3292%" height="21" fill="rgb(255,241,241)" fg:x="474586" fg:w="2130"/><text x="73.6093%" y="575.50"></text></g><g><title>        if face_areas[face_id] == 0: (2,404 samples, 0.37%)</title><rect x="73.7312%" y="144" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:237 (remove_non_manifolds) (2,404 samples, 0.37%)</title><rect x="73.7312%" y="166" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="179.50"></text></g><g><title>    faces, face_areas = remove_non_manifolds(mesh_data, faces) (2,404 samples, 0.37%)</title><rect x="73.7312%" y="188" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:80 (from_scratch) (2,404 samples, 0.37%)</title><rect x="73.7312%" y="210" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (2,404 samples, 0.37%)</title><rect x="73.7312%" y="232" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (2,404 samples, 0.37%)</title><rect x="73.7312%" y="254" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (2,404 samples, 0.37%)</title><rect x="73.7312%" y="276" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (2,404 samples, 0.37%)</title><rect x="73.7312%" y="298" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (2,404 samples, 0.37%)</title><rect x="73.7312%" y="320" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (2,404 samples, 0.37%)</title><rect x="73.7312%" y="342" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (2,404 samples, 0.37%)</title><rect x="73.7312%" y="364" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (2,404 samples, 0.37%)</title><rect x="73.7312%" y="386" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="399.50"></text></g><g><title>        self.get_mean_std() (2,404 samples, 0.37%)</title><rect x="73.7312%" y="408" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (2,404 samples, 0.37%)</title><rect x="73.7312%" y="430" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (2,404 samples, 0.37%)</title><rect x="73.7312%" y="452" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (2,404 samples, 0.37%)</title><rect x="73.7312%" y="474" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (2,404 samples, 0.37%)</title><rect x="73.7312%" y="496" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (2,404 samples, 0.37%)</title><rect x="73.7312%" y="518" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (2,404 samples, 0.37%)</title><rect x="73.7312%" y="540" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (2,404 samples, 0.37%)</title><rect x="73.7312%" y="562" width="0.3716%" height="21" fill="rgb(255,240,240)" fg:x="476992" fg:w="2404"/><text x="73.9812%" y="575.50"></text></g><g><title>        self._fileobj.write(data) (3,655 samples, 0.56%)</title><rect x="75.4060%" y="144" width="0.5650%" height="21" fill="rgb(255,238,238)" fg:x="487827" fg:w="3655"/><text x="75.6560%" y="157.50"></text></g><g><title>/home/siddharth/miniconda3/envs/new_MCNN/lib/python3.7/zipfile.py:1131 (write) (3,655 samples, 0.56%)</title><rect x="75.4060%" y="166" width="0.5650%" height="21" fill="rgb(255,238,238)" fg:x="487827" fg:w="3655"/><text x="75.6560%" y="179.50"></text></g><g><title>                fp.write(chunk.tobytes(&apos;C&apos;)) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="188" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="201.50"></text></g><g><title>/home/siddharth/miniconda3/envs/new_MCNN/lib/python3.7/site-packages/numpy/lib/format.py:609 (write_array) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="210" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="223.50"></text></g><g><title>                                   pickle_kwargs=pickle_kwargs) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="232" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="245.50"></text></g><g><title>/home/siddharth/miniconda3/envs/new_MCNN/lib/python3.7/site-packages/numpy/lib/npyio.py:706 (_savez) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="254" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="267.50"></text></g><g><title>    _savez(file, args, kwds, False) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="276" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="289.50"></text></g><g><title>/home/siddharth/miniconda3/envs/new_MCNN/lib/python3.7/site-packages/numpy/lib/npyio.py:603 (savez) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="298" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="311.50"></text></g><g><title>                            features=mesh_data.features) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="320" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:31 (fill_mesh) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="342" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="355.50"></text></g><g><title>        fill_mesh(self, file, opt) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="364" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="386" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="399.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="408" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="430" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="443.50"></text></g><g><title>            for i, data in enumerate(self): (3,367 samples, 0.52%)</title><rect x="75.4505%" y="452" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="474" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="487.50"></text></g><g><title>        self.get_mean_std() (3,367 samples, 0.52%)</title><rect x="75.4505%" y="496" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="518" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="531.50"></text></g><g><title>        dataset = ClassificationData(opt) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="540" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="562" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="575.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="584" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="597.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="606" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="619.50"></text></g><g><title>    dataset = DataLoader(opt) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="628" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="641.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (3,367 samples, 0.52%)</title><rect x="75.4505%" y="650" width="0.5205%" height="21" fill="rgb(255,239,239)" fg:x="488115" fg:w="3367"/><text x="75.7005%" y="663.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:243 (remove_non_manifolds) (3,998 samples, 0.62%)</title><rect x="76.4066%" y="166" width="0.6180%" height="21" fill="rgb(255,238,238)" fg:x="494300" fg:w="3998"/><text x="76.6566%" y="179.50"></text></g><g><title>    faces, face_areas = remove_non_manifolds(mesh_data, faces) (3,998 samples, 0.62%)</title><rect x="76.4066%" y="188" width="0.6180%" height="21" fill="rgb(255,238,238)" fg:x="494300" fg:w="3998"/><text x="76.6566%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:80 (from_scratch) (3,998 samples, 0.62%)</title><rect x="76.4066%" y="210" width="0.6180%" height="21" fill="rgb(255,238,238)" fg:x="494300" fg:w="3998"/><text x="76.6566%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (3,998 samples, 0.62%)</title><rect x="76.4066%" y="232" width="0.6180%" height="21" fill="rgb(255,238,238)" fg:x="494300" fg:w="3998"/><text x="76.6566%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (3,998 samples, 0.62%)</title><rect x="76.4066%" y="254" width="0.6180%" height="21" fill="rgb(255,238,238)" fg:x="494300" fg:w="3998"/><text x="76.6566%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (3,998 samples, 0.62%)</title><rect x="76.4066%" y="276" width="0.6180%" height="21" fill="rgb(255,238,238)" fg:x="494300" fg:w="3998"/><text x="76.6566%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (3,998 samples, 0.62%)</title><rect x="76.4066%" y="298" width="0.6180%" height="21" fill="rgb(255,238,238)" fg:x="494300" fg:w="3998"/><text x="76.6566%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (3,998 samples, 0.62%)</title><rect x="76.4066%" y="320" width="0.6180%" height="21" fill="rgb(255,238,238)" fg:x="494300" fg:w="3998"/><text x="76.6566%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (3,998 samples, 0.62%)</title><rect x="76.4066%" y="342" width="0.6180%" height="21" fill="rgb(255,238,238)" fg:x="494300" fg:w="3998"/><text x="76.6566%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (3,998 samples, 0.62%)</title><rect x="76.4066%" y="364" width="0.6180%" height="21" fill="rgb(255,238,238)" fg:x="494300" fg:w="3998"/><text x="76.6566%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (3,998 samples, 0.62%)</title><rect x="76.4066%" y="386" width="0.6180%" height="21" fill="rgb(255,238,238)" fg:x="494300" fg:w="3998"/><text x="76.6566%" y="399.50"></text></g><g><title>        self.get_mean_std() (3,998 samples, 0.62%)</title><rect x="76.4066%" y="408" width="0.6180%" height="21" fill="rgb(255,238,238)" fg:x="494300" fg:w="3998"/><text x="76.6566%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (3,998 samples, 0.62%)</title><rect x="76.4066%" y="430" width="0.6180%" height="21" fill="rgb(255,238,238)" fg:x="494300" fg:w="3998"/><text x="76.6566%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (3,998 samples, 0.62%)</title><rect x="76.4066%" y="452" width="0.6180%" height="21" fill="rgb(255,238,238)" fg:x="494300" fg:w="3998"/><text x="76.6566%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (3,998 samples, 0.62%)</title><rect x="76.4066%" y="474" width="0.6180%" height="21" fill="rgb(255,238,238)" fg:x="494300" fg:w="3998"/><text x="76.6566%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (3,998 samples, 0.62%)</title><rect x="76.4066%" y="496" width="0.6180%" height="21" fill="rgb(255,238,238)" fg:x="494300" fg:w="3998"/><text x="76.6566%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (3,998 samples, 0.62%)</title><rect x="76.4066%" y="518" width="0.6180%" height="21" fill="rgb(255,238,238)" fg:x="494300" fg:w="3998"/><text x="76.6566%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (3,998 samples, 0.62%)</title><rect x="76.4066%" y="540" width="0.6180%" height="21" fill="rgb(255,238,238)" fg:x="494300" fg:w="3998"/><text x="76.6566%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (3,998 samples, 0.62%)</title><rect x="76.4066%" y="562" width="0.6180%" height="21" fill="rgb(255,238,238)" fg:x="494300" fg:w="3998"/><text x="76.6566%" y="575.50"></text></g><g><title>            cur_edge = (face[i], face[(i + 1) % 3]) (8,455 samples, 1.31%)</title><rect x="76.4066%" y="144" width="1.3069%" height="21" fill="rgb(255,232,232)" fg:x="494300" fg:w="8455"/><text x="76.6566%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:275 (build_gemm) (4,457 samples, 0.69%)</title><rect x="77.0245%" y="166" width="0.6889%" height="21" fill="rgb(255,237,237)" fg:x="498298" fg:w="4457"/><text x="77.2745%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (4,457 samples, 0.69%)</title><rect x="77.0245%" y="188" width="0.6889%" height="21" fill="rgb(255,237,237)" fg:x="498298" fg:w="4457"/><text x="77.2745%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (4,457 samples, 0.69%)</title><rect x="77.0245%" y="210" width="0.6889%" height="21" fill="rgb(255,237,237)" fg:x="498298" fg:w="4457"/><text x="77.2745%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (4,457 samples, 0.69%)</title><rect x="77.0245%" y="232" width="0.6889%" height="21" fill="rgb(255,237,237)" fg:x="498298" fg:w="4457"/><text x="77.2745%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (4,457 samples, 0.69%)</title><rect x="77.0245%" y="254" width="0.6889%" height="21" fill="rgb(255,237,237)" fg:x="498298" fg:w="4457"/><text x="77.2745%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (4,457 samples, 0.69%)</title><rect x="77.0245%" y="276" width="0.6889%" height="21" fill="rgb(255,237,237)" fg:x="498298" fg:w="4457"/><text x="77.2745%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (4,457 samples, 0.69%)</title><rect x="77.0245%" y="298" width="0.6889%" height="21" fill="rgb(255,237,237)" fg:x="498298" fg:w="4457"/><text x="77.2745%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (4,457 samples, 0.69%)</title><rect x="77.0245%" y="320" width="0.6889%" height="21" fill="rgb(255,237,237)" fg:x="498298" fg:w="4457"/><text x="77.2745%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (4,457 samples, 0.69%)</title><rect x="77.0245%" y="342" width="0.6889%" height="21" fill="rgb(255,237,237)" fg:x="498298" fg:w="4457"/><text x="77.2745%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (4,457 samples, 0.69%)</title><rect x="77.0245%" y="364" width="0.6889%" height="21" fill="rgb(255,237,237)" fg:x="498298" fg:w="4457"/><text x="77.2745%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (4,457 samples, 0.69%)</title><rect x="77.0245%" y="386" width="0.6889%" height="21" fill="rgb(255,237,237)" fg:x="498298" fg:w="4457"/><text x="77.2745%" y="399.50"></text></g><g><title>        self.get_mean_std() (4,457 samples, 0.69%)</title><rect x="77.0245%" y="408" width="0.6889%" height="21" fill="rgb(255,237,237)" fg:x="498298" fg:w="4457"/><text x="77.2745%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (4,457 samples, 0.69%)</title><rect x="77.0245%" y="430" width="0.6889%" height="21" fill="rgb(255,237,237)" fg:x="498298" fg:w="4457"/><text x="77.2745%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (4,457 samples, 0.69%)</title><rect x="77.0245%" y="452" width="0.6889%" height="21" fill="rgb(255,237,237)" fg:x="498298" fg:w="4457"/><text x="77.2745%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (4,457 samples, 0.69%)</title><rect x="77.0245%" y="474" width="0.6889%" height="21" fill="rgb(255,237,237)" fg:x="498298" fg:w="4457"/><text x="77.2745%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (4,457 samples, 0.69%)</title><rect x="77.0245%" y="496" width="0.6889%" height="21" fill="rgb(255,237,237)" fg:x="498298" fg:w="4457"/><text x="77.2745%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (4,457 samples, 0.69%)</title><rect x="77.0245%" y="518" width="0.6889%" height="21" fill="rgb(255,237,237)" fg:x="498298" fg:w="4457"/><text x="77.2745%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (4,457 samples, 0.69%)</title><rect x="77.0245%" y="540" width="0.6889%" height="21" fill="rgb(255,237,237)" fg:x="498298" fg:w="4457"/><text x="77.2745%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (4,457 samples, 0.69%)</title><rect x="77.0245%" y="562" width="0.6889%" height="21" fill="rgb(255,237,237)" fg:x="498298" fg:w="4457"/><text x="77.2745%" y="575.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:292 (build_gemm) (2,584 samples, 0.40%)</title><rect x="77.7180%" y="166" width="0.3994%" height="21" fill="rgb(255,240,240)" fg:x="502784" fg:w="2584"/><text x="77.9680%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (2,584 samples, 0.40%)</title><rect x="77.7180%" y="188" width="0.3994%" height="21" fill="rgb(255,240,240)" fg:x="502784" fg:w="2584"/><text x="77.9680%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (2,584 samples, 0.40%)</title><rect x="77.7180%" y="210" width="0.3994%" height="21" fill="rgb(255,240,240)" fg:x="502784" fg:w="2584"/><text x="77.9680%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (2,584 samples, 0.40%)</title><rect x="77.7180%" y="232" width="0.3994%" height="21" fill="rgb(255,240,240)" fg:x="502784" fg:w="2584"/><text x="77.9680%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (2,584 samples, 0.40%)</title><rect x="77.7180%" y="254" width="0.3994%" height="21" fill="rgb(255,240,240)" fg:x="502784" fg:w="2584"/><text x="77.9680%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (2,584 samples, 0.40%)</title><rect x="77.7180%" y="276" width="0.3994%" height="21" fill="rgb(255,240,240)" fg:x="502784" fg:w="2584"/><text x="77.9680%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (2,584 samples, 0.40%)</title><rect x="77.7180%" y="298" width="0.3994%" height="21" fill="rgb(255,240,240)" fg:x="502784" fg:w="2584"/><text x="77.9680%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (2,584 samples, 0.40%)</title><rect x="77.7180%" y="320" width="0.3994%" height="21" fill="rgb(255,240,240)" fg:x="502784" fg:w="2584"/><text x="77.9680%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (2,584 samples, 0.40%)</title><rect x="77.7180%" y="342" width="0.3994%" height="21" fill="rgb(255,240,240)" fg:x="502784" fg:w="2584"/><text x="77.9680%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (2,584 samples, 0.40%)</title><rect x="77.7180%" y="364" width="0.3994%" height="21" fill="rgb(255,240,240)" fg:x="502784" fg:w="2584"/><text x="77.9680%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (2,584 samples, 0.40%)</title><rect x="77.7180%" y="386" width="0.3994%" height="21" fill="rgb(255,240,240)" fg:x="502784" fg:w="2584"/><text x="77.9680%" y="399.50"></text></g><g><title>        self.get_mean_std() (2,584 samples, 0.40%)</title><rect x="77.7180%" y="408" width="0.3994%" height="21" fill="rgb(255,240,240)" fg:x="502784" fg:w="2584"/><text x="77.9680%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (2,584 samples, 0.40%)</title><rect x="77.7180%" y="430" width="0.3994%" height="21" fill="rgb(255,240,240)" fg:x="502784" fg:w="2584"/><text x="77.9680%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (2,584 samples, 0.40%)</title><rect x="77.7180%" y="452" width="0.3994%" height="21" fill="rgb(255,240,240)" fg:x="502784" fg:w="2584"/><text x="77.9680%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (2,584 samples, 0.40%)</title><rect x="77.7180%" y="474" width="0.3994%" height="21" fill="rgb(255,240,240)" fg:x="502784" fg:w="2584"/><text x="77.9680%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (2,584 samples, 0.40%)</title><rect x="77.7180%" y="496" width="0.3994%" height="21" fill="rgb(255,240,240)" fg:x="502784" fg:w="2584"/><text x="77.9680%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (2,584 samples, 0.40%)</title><rect x="77.7180%" y="518" width="0.3994%" height="21" fill="rgb(255,240,240)" fg:x="502784" fg:w="2584"/><text x="77.9680%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (2,584 samples, 0.40%)</title><rect x="77.7180%" y="540" width="0.3994%" height="21" fill="rgb(255,240,240)" fg:x="502784" fg:w="2584"/><text x="77.9680%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (2,584 samples, 0.40%)</title><rect x="77.7180%" y="562" width="0.3994%" height="21" fill="rgb(255,240,240)" fg:x="502784" fg:w="2584"/><text x="77.9680%" y="575.50"></text></g><g><title>            edge_key = edge2key[edge] (4,816 samples, 0.74%)</title><rect x="77.7180%" y="144" width="0.7444%" height="21" fill="rgb(255,237,237)" fg:x="502784" fg:w="4816"/><text x="77.9680%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:297 (build_gemm) (2,232 samples, 0.35%)</title><rect x="78.1174%" y="166" width="0.3450%" height="21" fill="rgb(255,241,241)" fg:x="505368" fg:w="2232"/><text x="78.3674%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (2,232 samples, 0.35%)</title><rect x="78.1174%" y="188" width="0.3450%" height="21" fill="rgb(255,241,241)" fg:x="505368" fg:w="2232"/><text x="78.3674%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (2,232 samples, 0.35%)</title><rect x="78.1174%" y="210" width="0.3450%" height="21" fill="rgb(255,241,241)" fg:x="505368" fg:w="2232"/><text x="78.3674%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (2,232 samples, 0.35%)</title><rect x="78.1174%" y="232" width="0.3450%" height="21" fill="rgb(255,241,241)" fg:x="505368" fg:w="2232"/><text x="78.3674%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (2,232 samples, 0.35%)</title><rect x="78.1174%" y="254" width="0.3450%" height="21" fill="rgb(255,241,241)" fg:x="505368" fg:w="2232"/><text x="78.3674%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (2,232 samples, 0.35%)</title><rect x="78.1174%" y="276" width="0.3450%" height="21" fill="rgb(255,241,241)" fg:x="505368" fg:w="2232"/><text x="78.3674%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (2,232 samples, 0.35%)</title><rect x="78.1174%" y="298" width="0.3450%" height="21" fill="rgb(255,241,241)" fg:x="505368" fg:w="2232"/><text x="78.3674%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (2,232 samples, 0.35%)</title><rect x="78.1174%" y="320" width="0.3450%" height="21" fill="rgb(255,241,241)" fg:x="505368" fg:w="2232"/><text x="78.3674%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (2,232 samples, 0.35%)</title><rect x="78.1174%" y="342" width="0.3450%" height="21" fill="rgb(255,241,241)" fg:x="505368" fg:w="2232"/><text x="78.3674%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (2,232 samples, 0.35%)</title><rect x="78.1174%" y="364" width="0.3450%" height="21" fill="rgb(255,241,241)" fg:x="505368" fg:w="2232"/><text x="78.3674%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (2,232 samples, 0.35%)</title><rect x="78.1174%" y="386" width="0.3450%" height="21" fill="rgb(255,241,241)" fg:x="505368" fg:w="2232"/><text x="78.3674%" y="399.50"></text></g><g><title>        self.get_mean_std() (2,232 samples, 0.35%)</title><rect x="78.1174%" y="408" width="0.3450%" height="21" fill="rgb(255,241,241)" fg:x="505368" fg:w="2232"/><text x="78.3674%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (2,232 samples, 0.35%)</title><rect x="78.1174%" y="430" width="0.3450%" height="21" fill="rgb(255,241,241)" fg:x="505368" fg:w="2232"/><text x="78.3674%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (2,232 samples, 0.35%)</title><rect x="78.1174%" y="452" width="0.3450%" height="21" fill="rgb(255,241,241)" fg:x="505368" fg:w="2232"/><text x="78.3674%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (2,232 samples, 0.35%)</title><rect x="78.1174%" y="474" width="0.3450%" height="21" fill="rgb(255,241,241)" fg:x="505368" fg:w="2232"/><text x="78.3674%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (2,232 samples, 0.35%)</title><rect x="78.1174%" y="496" width="0.3450%" height="21" fill="rgb(255,241,241)" fg:x="505368" fg:w="2232"/><text x="78.3674%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (2,232 samples, 0.35%)</title><rect x="78.1174%" y="518" width="0.3450%" height="21" fill="rgb(255,241,241)" fg:x="505368" fg:w="2232"/><text x="78.3674%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (2,232 samples, 0.35%)</title><rect x="78.1174%" y="540" width="0.3450%" height="21" fill="rgb(255,241,241)" fg:x="505368" fg:w="2232"/><text x="78.3674%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (2,232 samples, 0.35%)</title><rect x="78.1174%" y="562" width="0.3450%" height="21" fill="rgb(255,241,241)" fg:x="505368" fg:w="2232"/><text x="78.3674%" y="575.50"></text></g><g><title>            edge_nb[edge_key][nb_count[edge_key]] = edge2key[faces_edges[(idx + 1) % 3]] (4,778 samples, 0.74%)</title><rect x="78.4624%" y="144" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:293 (build_gemm) (4,778 samples, 0.74%)</title><rect x="78.4624%" y="166" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (4,778 samples, 0.74%)</title><rect x="78.4624%" y="188" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (4,778 samples, 0.74%)</title><rect x="78.4624%" y="210" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (4,778 samples, 0.74%)</title><rect x="78.4624%" y="232" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (4,778 samples, 0.74%)</title><rect x="78.4624%" y="254" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (4,778 samples, 0.74%)</title><rect x="78.4624%" y="276" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (4,778 samples, 0.74%)</title><rect x="78.4624%" y="298" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (4,778 samples, 0.74%)</title><rect x="78.4624%" y="320" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (4,778 samples, 0.74%)</title><rect x="78.4624%" y="342" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (4,778 samples, 0.74%)</title><rect x="78.4624%" y="364" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (4,778 samples, 0.74%)</title><rect x="78.4624%" y="386" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="399.50"></text></g><g><title>        self.get_mean_std() (4,778 samples, 0.74%)</title><rect x="78.4624%" y="408" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (4,778 samples, 0.74%)</title><rect x="78.4624%" y="430" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (4,778 samples, 0.74%)</title><rect x="78.4624%" y="452" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (4,778 samples, 0.74%)</title><rect x="78.4624%" y="474" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (4,778 samples, 0.74%)</title><rect x="78.4624%" y="496" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (4,778 samples, 0.74%)</title><rect x="78.4624%" y="518" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (4,778 samples, 0.74%)</title><rect x="78.4624%" y="540" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (4,778 samples, 0.74%)</title><rect x="78.4624%" y="562" width="0.7386%" height="21" fill="rgb(255,237,237)" fg:x="507600" fg:w="4778"/><text x="78.7124%" y="575.50"></text></g><g><title>            edge_nb[edge_key][nb_count[edge_key] + 1] = edge2key[faces_edges[(idx + 2) % 3]] (4,598 samples, 0.71%)</title><rect x="79.2010%" y="144" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:294 (build_gemm) (4,598 samples, 0.71%)</title><rect x="79.2010%" y="166" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (4,598 samples, 0.71%)</title><rect x="79.2010%" y="188" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (4,598 samples, 0.71%)</title><rect x="79.2010%" y="210" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (4,598 samples, 0.71%)</title><rect x="79.2010%" y="232" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (4,598 samples, 0.71%)</title><rect x="79.2010%" y="254" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (4,598 samples, 0.71%)</title><rect x="79.2010%" y="276" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (4,598 samples, 0.71%)</title><rect x="79.2010%" y="298" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (4,598 samples, 0.71%)</title><rect x="79.2010%" y="320" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (4,598 samples, 0.71%)</title><rect x="79.2010%" y="342" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (4,598 samples, 0.71%)</title><rect x="79.2010%" y="364" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (4,598 samples, 0.71%)</title><rect x="79.2010%" y="386" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="399.50"></text></g><g><title>        self.get_mean_std() (4,598 samples, 0.71%)</title><rect x="79.2010%" y="408" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (4,598 samples, 0.71%)</title><rect x="79.2010%" y="430" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (4,598 samples, 0.71%)</title><rect x="79.2010%" y="452" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (4,598 samples, 0.71%)</title><rect x="79.2010%" y="474" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (4,598 samples, 0.71%)</title><rect x="79.2010%" y="496" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (4,598 samples, 0.71%)</title><rect x="79.2010%" y="518" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (4,598 samples, 0.71%)</title><rect x="79.2010%" y="540" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (4,598 samples, 0.71%)</title><rect x="79.2010%" y="562" width="0.7107%" height="21" fill="rgb(255,237,237)" fg:x="512378" fg:w="4598"/><text x="79.4510%" y="575.50"></text></g><g><title>            edge = tuple(sorted(list(edge))) (30,604 samples, 4.73%)</title><rect x="79.9117%" y="144" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="157.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:278 (build_gemm) (30,604 samples, 4.73%)</title><rect x="79.9117%" y="166" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="179.50">/med..</text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (30,604 samples, 4.73%)</title><rect x="79.9117%" y="188" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="201.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (30,604 samples, 4.73%)</title><rect x="79.9117%" y="210" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="223.50">/med..</text></g><g><title>        mesh_data = from_scratch(file, opt) (30,604 samples, 4.73%)</title><rect x="79.9117%" y="232" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="245.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (30,604 samples, 4.73%)</title><rect x="79.9117%" y="254" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="267.50">/med..</text></g><g><title>        fill_mesh(self, file, opt) (30,604 samples, 4.73%)</title><rect x="79.9117%" y="276" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="289.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (30,604 samples, 4.73%)</title><rect x="79.9117%" y="298" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="311.50">/med..</text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (30,604 samples, 4.73%)</title><rect x="79.9117%" y="320" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="333.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (30,604 samples, 4.73%)</title><rect x="79.9117%" y="342" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="355.50">/med..</text></g><g><title>            for i, data in enumerate(self): (30,604 samples, 4.73%)</title><rect x="79.9117%" y="364" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="377.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (30,604 samples, 4.73%)</title><rect x="79.9117%" y="386" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="399.50">/med..</text></g><g><title>        self.get_mean_std() (30,604 samples, 4.73%)</title><rect x="79.9117%" y="408" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="421.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (30,604 samples, 4.73%)</title><rect x="79.9117%" y="430" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="443.50">/med..</text></g><g><title>        dataset = ClassificationData(opt) (30,604 samples, 4.73%)</title><rect x="79.9117%" y="452" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="465.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (30,604 samples, 4.73%)</title><rect x="79.9117%" y="474" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="487.50">/med..</text></g><g><title>        self.dataset = CreateDataset(opt) (30,604 samples, 4.73%)</title><rect x="79.9117%" y="496" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="509.50">   ..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (30,604 samples, 4.73%)</title><rect x="79.9117%" y="518" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="531.50">/med..</text></g><g><title>    dataset = DataLoader(opt) (30,604 samples, 4.73%)</title><rect x="79.9117%" y="540" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="553.50">   ..</text></g><g><title>train.py:17 (&lt;module&gt;) (30,604 samples, 4.73%)</title><rect x="79.9117%" y="562" width="4.7306%" height="21" fill="rgb(255,217,217)" fg:x="516976" fg:w="30604"/><text x="80.1617%" y="575.50">trai..</text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:216 (&lt;listcomp&gt;) (9,241 samples, 1.43%)</title><rect x="84.6867%" y="166" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="179.50"></text></g><g><title>            face_vertex_ids = [int(c.split(&apos;/&apos;)[0]) for c in splitted_line[1:]] (9,241 samples, 1.43%)</title><rect x="84.6867%" y="188" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:216 (fill_from_file) (9,241 samples, 1.43%)</title><rect x="84.6867%" y="210" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="223.50"></text></g><g><title>    mesh_data.vs, faces = fill_from_file(mesh_data, file) (9,241 samples, 1.43%)</title><rect x="84.6867%" y="232" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:69 (from_scratch) (9,241 samples, 1.43%)</title><rect x="84.6867%" y="254" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="267.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (9,241 samples, 1.43%)</title><rect x="84.6867%" y="276" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (9,241 samples, 1.43%)</title><rect x="84.6867%" y="298" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="311.50"></text></g><g><title>        fill_mesh(self, file, opt) (9,241 samples, 1.43%)</title><rect x="84.6867%" y="320" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (9,241 samples, 1.43%)</title><rect x="84.6867%" y="342" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="355.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (9,241 samples, 1.43%)</title><rect x="84.6867%" y="364" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (9,241 samples, 1.43%)</title><rect x="84.6867%" y="386" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="399.50"></text></g><g><title>            for i, data in enumerate(self): (9,241 samples, 1.43%)</title><rect x="84.6867%" y="408" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (9,241 samples, 1.43%)</title><rect x="84.6867%" y="430" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="443.50"></text></g><g><title>        self.get_mean_std() (9,241 samples, 1.43%)</title><rect x="84.6867%" y="452" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (9,241 samples, 1.43%)</title><rect x="84.6867%" y="474" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="487.50"></text></g><g><title>        dataset = ClassificationData(opt) (9,241 samples, 1.43%)</title><rect x="84.6867%" y="496" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (9,241 samples, 1.43%)</title><rect x="84.6867%" y="518" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="531.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (9,241 samples, 1.43%)</title><rect x="84.6867%" y="540" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (9,241 samples, 1.43%)</title><rect x="84.6867%" y="562" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="575.50"></text></g><g><title>    dataset = DataLoader(opt) (9,241 samples, 1.43%)</title><rect x="84.6867%" y="584" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="597.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (9,241 samples, 1.43%)</title><rect x="84.6867%" y="606" width="1.4284%" height="21" fill="rgb(255,232,232)" fg:x="547867" fg:w="9241"/><text x="84.9367%" y="619.50"></text></g><g><title>            face_vertex_ids = [int(c.split(&apos;/&apos;)[0]) for c in splitted_line[1:]] (11,102 samples, 1.72%)</title><rect x="84.6867%" y="144" width="1.7161%" height="21" fill="rgb(255,230,230)" fg:x="547867" fg:w="11102"/><text x="84.9367%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:216 (fill_from_file) (1,861 samples, 0.29%)</title><rect x="86.1151%" y="166" width="0.2877%" height="21" fill="rgb(255,241,241)" fg:x="557108" fg:w="1861"/><text x="86.3651%" y="179.50"></text></g><g><title>    mesh_data.vs, faces = fill_from_file(mesh_data, file) (1,861 samples, 0.29%)</title><rect x="86.1151%" y="188" width="0.2877%" height="21" fill="rgb(255,241,241)" fg:x="557108" fg:w="1861"/><text x="86.3651%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:69 (from_scratch) (1,861 samples, 0.29%)</title><rect x="86.1151%" y="210" width="0.2877%" height="21" fill="rgb(255,241,241)" fg:x="557108" fg:w="1861"/><text x="86.3651%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (1,861 samples, 0.29%)</title><rect x="86.1151%" y="232" width="0.2877%" height="21" fill="rgb(255,241,241)" fg:x="557108" fg:w="1861"/><text x="86.3651%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (1,861 samples, 0.29%)</title><rect x="86.1151%" y="254" width="0.2877%" height="21" fill="rgb(255,241,241)" fg:x="557108" fg:w="1861"/><text x="86.3651%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (1,861 samples, 0.29%)</title><rect x="86.1151%" y="276" width="0.2877%" height="21" fill="rgb(255,241,241)" fg:x="557108" fg:w="1861"/><text x="86.3651%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (1,861 samples, 0.29%)</title><rect x="86.1151%" y="298" width="0.2877%" height="21" fill="rgb(255,241,241)" fg:x="557108" fg:w="1861"/><text x="86.3651%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (1,861 samples, 0.29%)</title><rect x="86.1151%" y="320" width="0.2877%" height="21" fill="rgb(255,241,241)" fg:x="557108" fg:w="1861"/><text x="86.3651%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (1,861 samples, 0.29%)</title><rect x="86.1151%" y="342" width="0.2877%" height="21" fill="rgb(255,241,241)" fg:x="557108" fg:w="1861"/><text x="86.3651%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (1,861 samples, 0.29%)</title><rect x="86.1151%" y="364" width="0.2877%" height="21" fill="rgb(255,241,241)" fg:x="557108" fg:w="1861"/><text x="86.3651%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (1,861 samples, 0.29%)</title><rect x="86.1151%" y="386" width="0.2877%" height="21" fill="rgb(255,241,241)" fg:x="557108" fg:w="1861"/><text x="86.3651%" y="399.50"></text></g><g><title>        self.get_mean_std() (1,861 samples, 0.29%)</title><rect x="86.1151%" y="408" width="0.2877%" height="21" fill="rgb(255,241,241)" fg:x="557108" fg:w="1861"/><text x="86.3651%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (1,861 samples, 0.29%)</title><rect x="86.1151%" y="430" width="0.2877%" height="21" fill="rgb(255,241,241)" fg:x="557108" fg:w="1861"/><text x="86.3651%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (1,861 samples, 0.29%)</title><rect x="86.1151%" y="452" width="0.2877%" height="21" fill="rgb(255,241,241)" fg:x="557108" fg:w="1861"/><text x="86.3651%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (1,861 samples, 0.29%)</title><rect x="86.1151%" y="474" width="0.2877%" height="21" fill="rgb(255,241,241)" fg:x="557108" fg:w="1861"/><text x="86.3651%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (1,861 samples, 0.29%)</title><rect x="86.1151%" y="496" width="0.2877%" height="21" fill="rgb(255,241,241)" fg:x="557108" fg:w="1861"/><text x="86.3651%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (1,861 samples, 0.29%)</title><rect x="86.1151%" y="518" width="0.2877%" height="21" fill="rgb(255,241,241)" fg:x="557108" fg:w="1861"/><text x="86.3651%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (1,861 samples, 0.29%)</title><rect x="86.1151%" y="540" width="0.2877%" height="21" fill="rgb(255,241,241)" fg:x="557108" fg:w="1861"/><text x="86.3651%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (1,861 samples, 0.29%)</title><rect x="86.1151%" y="562" width="0.2877%" height="21" fill="rgb(255,241,241)" fg:x="557108" fg:w="1861"/><text x="86.3651%" y="575.50"></text></g><g><title>            for idx, edge in enumerate(faces_edges): (2,272 samples, 0.35%)</title><rect x="86.7529%" y="144" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:252 (remove_non_manifolds) (2,272 samples, 0.35%)</title><rect x="86.7529%" y="166" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="179.50"></text></g><g><title>    faces, face_areas = remove_non_manifolds(mesh_data, faces) (2,272 samples, 0.35%)</title><rect x="86.7529%" y="188" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:80 (from_scratch) (2,272 samples, 0.35%)</title><rect x="86.7529%" y="210" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (2,272 samples, 0.35%)</title><rect x="86.7529%" y="232" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (2,272 samples, 0.35%)</title><rect x="86.7529%" y="254" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (2,272 samples, 0.35%)</title><rect x="86.7529%" y="276" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (2,272 samples, 0.35%)</title><rect x="86.7529%" y="298" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (2,272 samples, 0.35%)</title><rect x="86.7529%" y="320" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (2,272 samples, 0.35%)</title><rect x="86.7529%" y="342" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (2,272 samples, 0.35%)</title><rect x="86.7529%" y="364" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (2,272 samples, 0.35%)</title><rect x="86.7529%" y="386" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="399.50"></text></g><g><title>        self.get_mean_std() (2,272 samples, 0.35%)</title><rect x="86.7529%" y="408" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (2,272 samples, 0.35%)</title><rect x="86.7529%" y="430" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (2,272 samples, 0.35%)</title><rect x="86.7529%" y="452" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (2,272 samples, 0.35%)</title><rect x="86.7529%" y="474" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (2,272 samples, 0.35%)</title><rect x="86.7529%" y="496" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (2,272 samples, 0.35%)</title><rect x="86.7529%" y="518" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (2,272 samples, 0.35%)</title><rect x="86.7529%" y="540" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (2,272 samples, 0.35%)</title><rect x="86.7529%" y="562" width="0.3512%" height="21" fill="rgb(255,241,241)" fg:x="561234" fg:w="2272"/><text x="87.0029%" y="575.50"></text></g><g><title>            if edge not in edge2key: (2,579 samples, 0.40%)</title><rect x="87.2865%" y="144" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:280 (build_gemm) (2,579 samples, 0.40%)</title><rect x="87.2865%" y="166" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (2,579 samples, 0.40%)</title><rect x="87.2865%" y="188" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (2,579 samples, 0.40%)</title><rect x="87.2865%" y="210" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (2,579 samples, 0.40%)</title><rect x="87.2865%" y="232" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (2,579 samples, 0.40%)</title><rect x="87.2865%" y="254" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (2,579 samples, 0.40%)</title><rect x="87.2865%" y="276" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (2,579 samples, 0.40%)</title><rect x="87.2865%" y="298" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (2,579 samples, 0.40%)</title><rect x="87.2865%" y="320" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (2,579 samples, 0.40%)</title><rect x="87.2865%" y="342" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (2,579 samples, 0.40%)</title><rect x="87.2865%" y="364" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (2,579 samples, 0.40%)</title><rect x="87.2865%" y="386" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="399.50"></text></g><g><title>        self.get_mean_std() (2,579 samples, 0.40%)</title><rect x="87.2865%" y="408" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (2,579 samples, 0.40%)</title><rect x="87.2865%" y="430" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (2,579 samples, 0.40%)</title><rect x="87.2865%" y="452" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (2,579 samples, 0.40%)</title><rect x="87.2865%" y="474" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (2,579 samples, 0.40%)</title><rect x="87.2865%" y="496" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (2,579 samples, 0.40%)</title><rect x="87.2865%" y="518" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (2,579 samples, 0.40%)</title><rect x="87.2865%" y="540" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (2,579 samples, 0.40%)</title><rect x="87.2865%" y="562" width="0.3986%" height="21" fill="rgb(255,240,240)" fg:x="564686" fg:w="2579"/><text x="87.5365%" y="575.50"></text></g><g><title>            mesh.edge_areas[edge2key[edge]] += face_areas[face_id] / 3 (15,237 samples, 2.36%)</title><rect x="87.8034%" y="144" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:290 (build_gemm) (15,237 samples, 2.36%)</title><rect x="87.8034%" y="166" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (15,237 samples, 2.36%)</title><rect x="87.8034%" y="188" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (15,237 samples, 2.36%)</title><rect x="87.8034%" y="210" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (15,237 samples, 2.36%)</title><rect x="87.8034%" y="232" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (15,237 samples, 2.36%)</title><rect x="87.8034%" y="254" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (15,237 samples, 2.36%)</title><rect x="87.8034%" y="276" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (15,237 samples, 2.36%)</title><rect x="87.8034%" y="298" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (15,237 samples, 2.36%)</title><rect x="87.8034%" y="320" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (15,237 samples, 2.36%)</title><rect x="87.8034%" y="342" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (15,237 samples, 2.36%)</title><rect x="87.8034%" y="364" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (15,237 samples, 2.36%)</title><rect x="87.8034%" y="386" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="399.50"></text></g><g><title>        self.get_mean_std() (15,237 samples, 2.36%)</title><rect x="87.8034%" y="408" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (15,237 samples, 2.36%)</title><rect x="87.8034%" y="430" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (15,237 samples, 2.36%)</title><rect x="87.8034%" y="452" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (15,237 samples, 2.36%)</title><rect x="87.8034%" y="474" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (15,237 samples, 2.36%)</title><rect x="87.8034%" y="496" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (15,237 samples, 2.36%)</title><rect x="87.8034%" y="518" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (15,237 samples, 2.36%)</title><rect x="87.8034%" y="540" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (15,237 samples, 2.36%)</title><rect x="87.8034%" y="562" width="2.3553%" height="21" fill="rgb(255,227,227)" fg:x="568030" fg:w="15237"/><text x="88.0534%" y="575.50"></text></g><g><title>            nb_count[edge_key] += 2 (1,374 samples, 0.21%)</title><rect x="90.2511%" y="144" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:295 (build_gemm) (1,374 samples, 0.21%)</title><rect x="90.2511%" y="166" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (1,374 samples, 0.21%)</title><rect x="90.2511%" y="188" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (1,374 samples, 0.21%)</title><rect x="90.2511%" y="210" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (1,374 samples, 0.21%)</title><rect x="90.2511%" y="232" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (1,374 samples, 0.21%)</title><rect x="90.2511%" y="254" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (1,374 samples, 0.21%)</title><rect x="90.2511%" y="276" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (1,374 samples, 0.21%)</title><rect x="90.2511%" y="298" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (1,374 samples, 0.21%)</title><rect x="90.2511%" y="320" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (1,374 samples, 0.21%)</title><rect x="90.2511%" y="342" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (1,374 samples, 0.21%)</title><rect x="90.2511%" y="364" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (1,374 samples, 0.21%)</title><rect x="90.2511%" y="386" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="399.50"></text></g><g><title>        self.get_mean_std() (1,374 samples, 0.21%)</title><rect x="90.2511%" y="408" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (1,374 samples, 0.21%)</title><rect x="90.2511%" y="430" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (1,374 samples, 0.21%)</title><rect x="90.2511%" y="452" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (1,374 samples, 0.21%)</title><rect x="90.2511%" y="474" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (1,374 samples, 0.21%)</title><rect x="90.2511%" y="496" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (1,374 samples, 0.21%)</title><rect x="90.2511%" y="518" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (1,374 samples, 0.21%)</title><rect x="90.2511%" y="540" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (1,374 samples, 0.21%)</title><rect x="90.2511%" y="562" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="583865" fg:w="1374"/><text x="90.5011%" y="575.50"></text></g><g><title>            pseudomatch = _compile(PseudoToken).match(line, pos) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="144" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="157.50"></text></g><g><title>/home/siddharth/miniconda3/envs/new_MCNN/lib/python3.7/tokenize.py:583 (_tokenize) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="166" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="179.50"></text></g><g><title>    for token in tokenize.generate_tokens(StringIO(string).readline): (3,961 samples, 0.61%)</title><rect x="90.4769%" y="188" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="201.50"></text></g><g><title>/home/siddharth/miniconda3/envs/new_MCNN/lib/python3.7/site-packages/numpy/lib/format.py:466 (_filter_header) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="210" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="223.50"></text></g><g><title>    header = asbytes(_filter_header(header)) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="232" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="245.50"></text></g><g><title>/home/siddharth/miniconda3/envs/new_MCNN/lib/python3.7/site-packages/numpy/lib/format.py:315 (_write_array_header) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="254" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="267.50"></text></g><g><title>                                   version) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="276" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="289.50"></text></g><g><title>/home/siddharth/miniconda3/envs/new_MCNN/lib/python3.7/site-packages/numpy/lib/format.py:572 (write_array) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="298" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="311.50"></text></g><g><title>                                   pickle_kwargs=pickle_kwargs) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="320" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="333.50"></text></g><g><title>/home/siddharth/miniconda3/envs/new_MCNN/lib/python3.7/site-packages/numpy/lib/npyio.py:706 (_savez) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="342" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="355.50"></text></g><g><title>    _savez(file, args, kwds, False) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="364" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="377.50"></text></g><g><title>/home/siddharth/miniconda3/envs/new_MCNN/lib/python3.7/site-packages/numpy/lib/npyio.py:603 (savez) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="386" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="399.50"></text></g><g><title>                            features=mesh_data.features) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="408" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:31 (fill_mesh) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="430" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="443.50"></text></g><g><title>        fill_mesh(self, file, opt) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="452" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="474" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="487.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="496" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="518" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="531.50"></text></g><g><title>            for i, data in enumerate(self): (3,961 samples, 0.61%)</title><rect x="90.4769%" y="540" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="562" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="575.50"></text></g><g><title>        self.get_mean_std() (3,961 samples, 0.61%)</title><rect x="90.4769%" y="584" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="597.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="606" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="619.50"></text></g><g><title>        dataset = ClassificationData(opt) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="628" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="641.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="650" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="663.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="672" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="685.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="694" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="707.50"></text></g><g><title>    dataset = DataLoader(opt) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="716" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="729.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (3,961 samples, 0.61%)</title><rect x="90.4769%" y="738" width="0.6123%" height="21" fill="rgb(255,238,238)" fg:x="585326" fg:w="3961"/><text x="90.7269%" y="751.50"></text></g><g><title>            return eval(&apos;self.&apos; + item) (1,629 samples, 0.25%)</title><rect x="91.1421%" y="144" width="0.2518%" height="21" fill="rgb(255,242,242)" fg:x="589629" fg:w="1629"/><text x="91.3921%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:58 (__getitem__) (1,629 samples, 0.25%)</title><rect x="91.1421%" y="166" width="0.2518%" height="21" fill="rgb(255,242,242)" fg:x="589629" fg:w="1629"/><text x="91.3921%" y="179.50"></text></g><g><title>            return sqrt(add.reduce(s, axis=axis, keepdims=keepdims)) (7,264 samples, 1.12%)</title><rect x="91.4606%" y="144" width="1.1228%" height="21" fill="rgb(255,234,234)" fg:x="591690" fg:w="7264"/><text x="91.7106%" y="157.50"></text></g><g><title>/home/siddharth/miniconda3/envs/new_MCNN/lib/python3.7/site-packages/numpy/linalg/linalg.py:2390 (norm) (7,264 samples, 1.12%)</title><rect x="91.4606%" y="166" width="1.1228%" height="21" fill="rgb(255,234,234)" fg:x="591690" fg:w="7264"/><text x="91.7106%" y="179.50"></text></g><g><title>            sides[edge_key][nb_count[edge_key] - 1] = nb_count[edge2key[faces_edges[(idx + 2) % 3]]] - 2 (5,132 samples, 0.79%)</title><rect x="92.9053%" y="144" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:299 (build_gemm) (5,132 samples, 0.79%)</title><rect x="92.9053%" y="166" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (5,132 samples, 0.79%)</title><rect x="92.9053%" y="188" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (5,132 samples, 0.79%)</title><rect x="92.9053%" y="210" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (5,132 samples, 0.79%)</title><rect x="92.9053%" y="232" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (5,132 samples, 0.79%)</title><rect x="92.9053%" y="254" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (5,132 samples, 0.79%)</title><rect x="92.9053%" y="276" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (5,132 samples, 0.79%)</title><rect x="92.9053%" y="298" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (5,132 samples, 0.79%)</title><rect x="92.9053%" y="320" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (5,132 samples, 0.79%)</title><rect x="92.9053%" y="342" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (5,132 samples, 0.79%)</title><rect x="92.9053%" y="364" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (5,132 samples, 0.79%)</title><rect x="92.9053%" y="386" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="399.50"></text></g><g><title>        self.get_mean_std() (5,132 samples, 0.79%)</title><rect x="92.9053%" y="408" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (5,132 samples, 0.79%)</title><rect x="92.9053%" y="430" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (5,132 samples, 0.79%)</title><rect x="92.9053%" y="452" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (5,132 samples, 0.79%)</title><rect x="92.9053%" y="474" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (5,132 samples, 0.79%)</title><rect x="92.9053%" y="496" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (5,132 samples, 0.79%)</title><rect x="92.9053%" y="518" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (5,132 samples, 0.79%)</title><rect x="92.9053%" y="540" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (5,132 samples, 0.79%)</title><rect x="92.9053%" y="562" width="0.7933%" height="21" fill="rgb(255,236,236)" fg:x="601036" fg:w="5132"/><text x="93.1553%" y="575.50"></text></g><g><title>            sides[edge_key][nb_count[edge_key] - 2] = nb_count[edge2key[faces_edges[(idx + 1) % 3]]] - 1 (5,244 samples, 0.81%)</title><rect x="93.6986%" y="144" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:298 (build_gemm) (5,244 samples, 0.81%)</title><rect x="93.6986%" y="166" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (5,244 samples, 0.81%)</title><rect x="93.6986%" y="188" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (5,244 samples, 0.81%)</title><rect x="93.6986%" y="210" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (5,244 samples, 0.81%)</title><rect x="93.6986%" y="232" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (5,244 samples, 0.81%)</title><rect x="93.6986%" y="254" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (5,244 samples, 0.81%)</title><rect x="93.6986%" y="276" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (5,244 samples, 0.81%)</title><rect x="93.6986%" y="298" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (5,244 samples, 0.81%)</title><rect x="93.6986%" y="320" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (5,244 samples, 0.81%)</title><rect x="93.6986%" y="342" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (5,244 samples, 0.81%)</title><rect x="93.6986%" y="364" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (5,244 samples, 0.81%)</title><rect x="93.6986%" y="386" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="399.50"></text></g><g><title>        self.get_mean_std() (5,244 samples, 0.81%)</title><rect x="93.6986%" y="408" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (5,244 samples, 0.81%)</title><rect x="93.6986%" y="430" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (5,244 samples, 0.81%)</title><rect x="93.6986%" y="452" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (5,244 samples, 0.81%)</title><rect x="93.6986%" y="474" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (5,244 samples, 0.81%)</title><rect x="93.6986%" y="496" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (5,244 samples, 0.81%)</title><rect x="93.6986%" y="518" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (5,244 samples, 0.81%)</title><rect x="93.6986%" y="540" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (5,244 samples, 0.81%)</title><rect x="93.6986%" y="562" width="0.8106%" height="21" fill="rgb(255,236,236)" fg:x="606168" fg:w="5244"/><text x="93.9486%" y="575.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:214 (&lt;listcomp&gt;) (1,666 samples, 0.26%)</title><rect x="94.5800%" y="166" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="179.50"></text></g><g><title>            vs.append([float(v) for v in splitted_line[1:4]]) (1,666 samples, 0.26%)</title><rect x="94.5800%" y="188" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:214 (fill_from_file) (1,666 samples, 0.26%)</title><rect x="94.5800%" y="210" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="223.50"></text></g><g><title>    mesh_data.vs, faces = fill_from_file(mesh_data, file) (1,666 samples, 0.26%)</title><rect x="94.5800%" y="232" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:69 (from_scratch) (1,666 samples, 0.26%)</title><rect x="94.5800%" y="254" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="267.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (1,666 samples, 0.26%)</title><rect x="94.5800%" y="276" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (1,666 samples, 0.26%)</title><rect x="94.5800%" y="298" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="311.50"></text></g><g><title>        fill_mesh(self, file, opt) (1,666 samples, 0.26%)</title><rect x="94.5800%" y="320" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (1,666 samples, 0.26%)</title><rect x="94.5800%" y="342" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="355.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (1,666 samples, 0.26%)</title><rect x="94.5800%" y="364" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (1,666 samples, 0.26%)</title><rect x="94.5800%" y="386" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="399.50"></text></g><g><title>            for i, data in enumerate(self): (1,666 samples, 0.26%)</title><rect x="94.5800%" y="408" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (1,666 samples, 0.26%)</title><rect x="94.5800%" y="430" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="443.50"></text></g><g><title>        self.get_mean_std() (1,666 samples, 0.26%)</title><rect x="94.5800%" y="452" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (1,666 samples, 0.26%)</title><rect x="94.5800%" y="474" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="487.50"></text></g><g><title>        dataset = ClassificationData(opt) (1,666 samples, 0.26%)</title><rect x="94.5800%" y="496" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (1,666 samples, 0.26%)</title><rect x="94.5800%" y="518" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="531.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (1,666 samples, 0.26%)</title><rect x="94.5800%" y="540" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (1,666 samples, 0.26%)</title><rect x="94.5800%" y="562" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="575.50"></text></g><g><title>    dataset = DataLoader(opt) (1,666 samples, 0.26%)</title><rect x="94.5800%" y="584" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="597.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (1,666 samples, 0.26%)</title><rect x="94.5800%" y="606" width="0.2575%" height="21" fill="rgb(255,242,242)" fg:x="611870" fg:w="1666"/><text x="94.8300%" y="619.50"></text></g><g><title>            vs.append([float(v) for v in splitted_line[1:4]]) (2,463 samples, 0.38%)</title><rect x="94.5800%" y="144" width="0.3807%" height="21" fill="rgb(255,240,240)" fg:x="611870" fg:w="2463"/><text x="94.8300%" y="157.50"></text></g><g><title>                edges.append(list(edge)) (10,505 samples, 1.62%)</title><rect x="95.3397%" y="144" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:282 (build_gemm) (10,505 samples, 1.62%)</title><rect x="95.3397%" y="166" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="179.50"></text></g><g><title>    build_gemm(mesh_data, faces, face_areas) (10,505 samples, 1.62%)</title><rect x="95.3397%" y="188" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:85 (from_scratch) (10,505 samples, 1.62%)</title><rect x="95.3397%" y="210" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (10,505 samples, 1.62%)</title><rect x="95.3397%" y="232" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (10,505 samples, 1.62%)</title><rect x="95.3397%" y="254" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (10,505 samples, 1.62%)</title><rect x="95.3397%" y="276" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (10,505 samples, 1.62%)</title><rect x="95.3397%" y="298" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (10,505 samples, 1.62%)</title><rect x="95.3397%" y="320" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (10,505 samples, 1.62%)</title><rect x="95.3397%" y="342" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (10,505 samples, 1.62%)</title><rect x="95.3397%" y="364" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (10,505 samples, 1.62%)</title><rect x="95.3397%" y="386" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="399.50"></text></g><g><title>        self.get_mean_std() (10,505 samples, 1.62%)</title><rect x="95.3397%" y="408" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (10,505 samples, 1.62%)</title><rect x="95.3397%" y="430" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (10,505 samples, 1.62%)</title><rect x="95.3397%" y="452" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (10,505 samples, 1.62%)</title><rect x="95.3397%" y="474" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (10,505 samples, 1.62%)</title><rect x="95.3397%" y="496" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (10,505 samples, 1.62%)</title><rect x="95.3397%" y="518" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (10,505 samples, 1.62%)</title><rect x="95.3397%" y="540" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (10,505 samples, 1.62%)</title><rect x="95.3397%" y="562" width="1.6238%" height="21" fill="rgb(255,230,230)" fg:x="616785" fg:w="10505"/><text x="95.5897%" y="575.50"></text></g><g><title>                edges_set.add(edge) (1,967 samples, 0.30%)</title><rect x="97.0057%" y="144" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="157.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:253 (remove_non_manifolds) (1,967 samples, 0.30%)</title><rect x="97.0057%" y="166" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="179.50"></text></g><g><title>    faces, face_areas = remove_non_manifolds(mesh_data, faces) (1,967 samples, 0.30%)</title><rect x="97.0057%" y="188" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:80 (from_scratch) (1,967 samples, 0.30%)</title><rect x="97.0057%" y="210" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="223.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (1,967 samples, 0.30%)</title><rect x="97.0057%" y="232" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (1,967 samples, 0.30%)</title><rect x="97.0057%" y="254" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="267.50"></text></g><g><title>        fill_mesh(self, file, opt) (1,967 samples, 0.30%)</title><rect x="97.0057%" y="276" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (1,967 samples, 0.30%)</title><rect x="97.0057%" y="298" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="311.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (1,967 samples, 0.30%)</title><rect x="97.0057%" y="320" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (1,967 samples, 0.30%)</title><rect x="97.0057%" y="342" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="355.50"></text></g><g><title>            for i, data in enumerate(self): (1,967 samples, 0.30%)</title><rect x="97.0057%" y="364" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (1,967 samples, 0.30%)</title><rect x="97.0057%" y="386" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="399.50"></text></g><g><title>        self.get_mean_std() (1,967 samples, 0.30%)</title><rect x="97.0057%" y="408" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (1,967 samples, 0.30%)</title><rect x="97.0057%" y="430" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="443.50"></text></g><g><title>        dataset = ClassificationData(opt) (1,967 samples, 0.30%)</title><rect x="97.0057%" y="452" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (1,967 samples, 0.30%)</title><rect x="97.0057%" y="474" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="487.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (1,967 samples, 0.30%)</title><rect x="97.0057%" y="496" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (1,967 samples, 0.30%)</title><rect x="97.0057%" y="518" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="531.50"></text></g><g><title>    dataset = DataLoader(opt) (1,967 samples, 0.30%)</title><rect x="97.0057%" y="540" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="553.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (1,967 samples, 0.30%)</title><rect x="97.0057%" y="562" width="0.3040%" height="21" fill="rgb(255,241,241)" fg:x="627563" fg:w="1967"/><text x="97.2557%" y="575.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:220 (&lt;listcomp&gt;) (2,107 samples, 0.33%)</title><rect x="99.4111%" y="166" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="179.50"></text></g><g><title>                               for ind in face_vertex_ids] (2,107 samples, 0.33%)</title><rect x="99.4111%" y="188" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="201.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:220 (fill_from_file) (2,107 samples, 0.33%)</title><rect x="99.4111%" y="210" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="223.50"></text></g><g><title>    mesh_data.vs, faces = fill_from_file(mesh_data, file) (2,107 samples, 0.33%)</title><rect x="99.4111%" y="232" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="245.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:69 (from_scratch) (2,107 samples, 0.33%)</title><rect x="99.4111%" y="254" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="267.50"></text></g><g><title>        mesh_data = from_scratch(file, opt) (2,107 samples, 0.33%)</title><rect x="99.4111%" y="276" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="289.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh_prepare.py:14 (fill_mesh) (2,107 samples, 0.33%)</title><rect x="99.4111%" y="298" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="311.50"></text></g><g><title>        fill_mesh(self, file, opt) (2,107 samples, 0.33%)</title><rect x="99.4111%" y="320" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="333.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/models/layers/mesh.py:16 (__init__) (2,107 samples, 0.33%)</title><rect x="99.4111%" y="342" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="355.50"></text></g><g><title>        mesh = Mesh(file=path, opt=self.opt, hold_history=False, export_folder=self.opt.export_folder) (2,107 samples, 0.33%)</title><rect x="99.4111%" y="364" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="377.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:32 (__getitem__) (2,107 samples, 0.33%)</title><rect x="99.4111%" y="386" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="399.50"></text></g><g><title>            for i, data in enumerate(self): (2,107 samples, 0.33%)</title><rect x="99.4111%" y="408" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="421.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/base_dataset.py:33 (get_mean_std) (2,107 samples, 0.33%)</title><rect x="99.4111%" y="430" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="443.50"></text></g><g><title>        self.get_mean_std() (2,107 samples, 0.33%)</title><rect x="99.4111%" y="452" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="465.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/classification_data.py:24 (__init__) (2,107 samples, 0.33%)</title><rect x="99.4111%" y="474" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="487.50"></text></g><g><title>        dataset = ClassificationData(opt) (2,107 samples, 0.33%)</title><rect x="99.4111%" y="496" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="509.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:12 (CreateDataset) (2,107 samples, 0.33%)</title><rect x="99.4111%" y="518" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="531.50"></text></g><g><title>        self.dataset = CreateDataset(opt) (2,107 samples, 0.33%)</title><rect x="99.4111%" y="540" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="553.50"></text></g><g><title>/media/Data1/siddharth/MCNN-Rot/data/__init__.py:21 (__init__) (2,107 samples, 0.33%)</title><rect x="99.4111%" y="562" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="575.50"></text></g><g><title>    dataset = DataLoader(opt) (2,107 samples, 0.33%)</title><rect x="99.4111%" y="584" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="597.50"></text></g><g><title>train.py:17 (&lt;module&gt;) (2,107 samples, 0.33%)</title><rect x="99.4111%" y="606" width="0.3257%" height="21" fill="rgb(255,241,241)" fg:x="643124" fg:w="2107"/><text x="99.6611%" y="619.50"></text></g><g><title>                               for ind in face_vertex_ids] (2,940 samples, 0.45%)</title><rect x="99.4111%" y="144" width="0.4545%" height="21" fill="rgb(255,239,239)" fg:x="643124" fg:w="2940"/><text x="99.6611%" y="157.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (559,367 samples, 86.46%)</title><rect x="13.5272%" y="122" width="86.4643%" height="21" fill="rgb(255,110,110)" fg:x="87512" fg:w="559367"/><text x="13.7772%" y="135.50">➤ CPU ➤</text></g><g><title>all (646,934 samples, 100%)</title><rect x="0.0000%" y="100" width="100.0000%" height="21" fill="rgb(255,100,100)" fg:x="0" fg:w="646934"/><text x="0.2500%" y="113.50"></text></g></svg><style type="text/css">
.waiting-frame rect { fill: #ffb264; }
.dead-frame rect, .unstarted-frame rect { fill-opacity: 0.3; fill: white; }
.running-frame rect { fill: #b2b2ff; }
</style></svg>